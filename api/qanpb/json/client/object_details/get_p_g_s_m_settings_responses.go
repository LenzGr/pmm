// Code generated by go-swagger; DO NOT EDIT.

package object_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetPGSMSettingsReader is a Reader for the GetPGSMSettings structure.
type GetPGSMSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPGSMSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPGSMSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetPGSMSettingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPGSMSettingsOK creates a GetPGSMSettingsOK with default headers values
func NewGetPGSMSettingsOK() *GetPGSMSettingsOK {
	return &GetPGSMSettingsOK{}
}

/* GetPGSMSettingsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetPGSMSettingsOK struct {
	Payload *GetPGSMSettingsOKBody
}

func (o *GetPGSMSettingsOK) Error() string {
	return fmt.Sprintf("[POST /v0/qan/ObjectDetails/GetPGSMSettings][%d] getPGSMSettingsOk  %+v", 200, o.Payload)
}
func (o *GetPGSMSettingsOK) GetPayload() *GetPGSMSettingsOKBody {
	return o.Payload
}

func (o *GetPGSMSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPGSMSettingsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPGSMSettingsDefault creates a GetPGSMSettingsDefault with default headers values
func NewGetPGSMSettingsDefault(code int) *GetPGSMSettingsDefault {
	return &GetPGSMSettingsDefault{
		_statusCode: code,
	}
}

/* GetPGSMSettingsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetPGSMSettingsDefault struct {
	_statusCode int

	Payload *GetPGSMSettingsDefaultBody
}

// Code gets the status code for the get p g s m settings default response
func (o *GetPGSMSettingsDefault) Code() int {
	return o._statusCode
}

func (o *GetPGSMSettingsDefault) Error() string {
	return fmt.Sprintf("[POST /v0/qan/ObjectDetails/GetPGSMSettings][%d] GetPGSMSettings default  %+v", o._statusCode, o.Payload)
}
func (o *GetPGSMSettingsDefault) GetPayload() *GetPGSMSettingsDefaultBody {
	return o.Payload
}

func (o *GetPGSMSettingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPGSMSettingsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetPGSMSettingsBody SettingsRequest defines filtering by agentid.
swagger:model GetPGSMSettingsBody
*/
type GetPGSMSettingsBody struct {

	// period start from
	// Format: date-time
	PeriodStartFrom strfmt.DateTime `json:"period_start_from,omitempty"`

	// period start to
	// Format: date-time
	PeriodStartTo strfmt.DateTime `json:"period_start_to,omitempty"`

	// labels
	Labels []*GetPGSMSettingsParamsBodyLabelsItems0 `json:"labels"`

	// queryid
	Queryid string `json:"queryid,omitempty"`
}

// Validate validates this get p g s m settings body
func (o *GetPGSMSettingsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePeriodStartFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePeriodStartTo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGSMSettingsBody) validatePeriodStartFrom(formats strfmt.Registry) error {
	if swag.IsZero(o.PeriodStartFrom) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"period_start_from", "body", "date-time", o.PeriodStartFrom.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetPGSMSettingsBody) validatePeriodStartTo(formats strfmt.Registry) error {
	if swag.IsZero(o.PeriodStartTo) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"period_start_to", "body", "date-time", o.PeriodStartTo.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetPGSMSettingsBody) validateLabels(formats strfmt.Registry) error {
	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {
			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get p g s m settings body based on the context it is used
func (o *GetPGSMSettingsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLabels(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGSMSettingsBody) contextValidateLabels(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Labels); i++ {

		if o.Labels[i] != nil {
			if err := o.Labels[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGSMSettingsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGSMSettingsBody) UnmarshalBinary(b []byte) error {
	var res GetPGSMSettingsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPGSMSettingsDefaultBody get p g s m settings default body
swagger:model GetPGSMSettingsDefaultBody
*/
type GetPGSMSettingsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*GetPGSMSettingsDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this get p g s m settings default body
func (o *GetPGSMSettingsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGSMSettingsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPGSMSettings default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPGSMSettings default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get p g s m settings default body based on the context it is used
func (o *GetPGSMSettingsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGSMSettingsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Details); i++ {

		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPGSMSettings default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPGSMSettings default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGSMSettingsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGSMSettingsDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetPGSMSettingsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPGSMSettingsDefaultBodyDetailsItems0 get p g s m settings default body details items0
swagger:model GetPGSMSettingsDefaultBodyDetailsItems0
*/
type GetPGSMSettingsDefaultBodyDetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this get p g s m settings default body details items0
func (o *GetPGSMSettingsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g s m settings default body details items0 based on context it is used
func (o *GetPGSMSettingsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGSMSettingsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGSMSettingsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetPGSMSettingsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPGSMSettingsOKBody SettingsReply is settings rows as a list.
swagger:model GetPGSMSettingsOKBody
*/
type GetPGSMSettingsOKBody struct {

	// settings items
	SettingsItems []*GetPGSMSettingsOKBodySettingsItemsItems0 `json:"settings_items"`
}

// Validate validates this get p g s m settings OK body
func (o *GetPGSMSettingsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSettingsItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGSMSettingsOKBody) validateSettingsItems(formats strfmt.Registry) error {
	if swag.IsZero(o.SettingsItems) { // not required
		return nil
	}

	for i := 0; i < len(o.SettingsItems); i++ {
		if swag.IsZero(o.SettingsItems[i]) { // not required
			continue
		}

		if o.SettingsItems[i] != nil {
			if err := o.SettingsItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPGSMSettingsOk" + "." + "settings_items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPGSMSettingsOk" + "." + "settings_items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get p g s m settings OK body based on the context it is used
func (o *GetPGSMSettingsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateSettingsItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGSMSettingsOKBody) contextValidateSettingsItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.SettingsItems); i++ {

		if o.SettingsItems[i] != nil {
			if err := o.SettingsItems[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPGSMSettingsOk" + "." + "settings_items" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPGSMSettingsOk" + "." + "settings_items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGSMSettingsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGSMSettingsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPGSMSettingsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPGSMSettingsOKBodySettingsItemsItems0 SettingsItem represents one row in settings.
swagger:model GetPGSMSettingsOKBodySettingsItemsItems0
*/
type GetPGSMSettingsOKBodySettingsItemsItems0 struct {

	// name
	Name string `json:"name,omitempty"`

	// value
	Value string `json:"value,omitempty"`

	// default value
	DefaultValue string `json:"default_value,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// minimum
	Minimum string `json:"minimum,omitempty"`

	// maximum
	Maximum string `json:"maximum,omitempty"`

	// options
	Options string `json:"options,omitempty"`

	// restart
	Restart string `json:"restart,omitempty"`
}

// Validate validates this get p g s m settings OK body settings items items0
func (o *GetPGSMSettingsOKBodySettingsItemsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g s m settings OK body settings items items0 based on context it is used
func (o *GetPGSMSettingsOKBodySettingsItemsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGSMSettingsOKBodySettingsItemsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGSMSettingsOKBodySettingsItemsItems0) UnmarshalBinary(b []byte) error {
	var res GetPGSMSettingsOKBodySettingsItemsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetPGSMSettingsParamsBodyLabelsItems0 MapFieldEntry allows to pass labels/dimensions in form like {"server": ["db1", "db2"...]}.
swagger:model GetPGSMSettingsParamsBodyLabelsItems0
*/
type GetPGSMSettingsParamsBodyLabelsItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value []string `json:"value"`
}

// Validate validates this get p g s m settings params body labels items0
func (o *GetPGSMSettingsParamsBodyLabelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g s m settings params body labels items0 based on context it is used
func (o *GetPGSMSettingsParamsBodyLabelsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGSMSettingsParamsBodyLabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGSMSettingsParamsBodyLabelsItems0) UnmarshalBinary(b []byte) error {
	var res GetPGSMSettingsParamsBodyLabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
