consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
swagger: '2.0'
info:
  description: |-
    The Grafana backend exposes an HTTP API, the same API is used by the frontend to do
    everything from saving dashboards, creating users and updating data sources.
  title: Grafana HTTP API.
  contact:
    name: Grafana Labs
    url: https://grafana.com
    email: hello@grafana.com
  license:
    name: GNU Affero General Public License v3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: 0.0.1
basePath: /api
paths:
  /api/alertmanager/{Recipient}/api/v2/alerts:
    get:
      description: get alertmanager alerts
      operationId: RouteGetAMAlerts
      parameters:
        - default: true
          description: Show active alerts
          in: query
          name: active
          type: boolean
          x-go-name: Active
        - default: true
          description: Show silenced alerts
          in: query
          name: silenced
          type: boolean
          x-go-name: Silenced
        - default: true
          description: Show inhibited alerts
          in: query
          name: inhibited
          type: boolean
          x-go-name: Inhibited
        - description: A list of matchers to filter alerts by
          in: query
          items:
            type: string
          name: filter
          type: array
          x-go-name: Matchers
        - description: A regex matching receivers to filter alerts by
          in: query
          name: receiver
          type: string
          x-go-name: Receivers
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: gettableAlerts
          schema:
            $ref: '#/definitions/gettableAlerts'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
    post:
      description: create alertmanager alerts
      operationId: RoutePostAMAlerts
      parameters:
        - in: body
          name: PostableAlerts
          schema:
            items:
              $ref: '#/definitions/postableAlert'
            type: array
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
  /api/alertmanager/{Recipient}/api/v2/alerts/groups:
    get:
      description: get alertmanager alerts
      operationId: RouteGetAMAlertGroups
      parameters:
        - default: true
          description: Show active alerts
          in: query
          name: active
          type: boolean
          x-go-name: Active
        - default: true
          description: Show silenced alerts
          in: query
          name: silenced
          type: boolean
          x-go-name: Silenced
        - default: true
          description: Show inhibited alerts
          in: query
          name: inhibited
          type: boolean
          x-go-name: Inhibited
        - description: A list of matchers to filter alerts by
          in: query
          items:
            type: string
          name: filter
          type: array
          x-go-name: Matchers
        - description: A regex matching receivers to filter alerts by
          in: query
          name: receiver
          type: string
          x-go-name: Receivers
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: alertGroups
          schema:
            $ref: '#/definitions/alertGroups'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
  /api/alertmanager/{Recipient}/api/v2/silence/{SilenceId}:
    delete:
      description: delete silence
      operationId: RouteDeleteSilence
      parameters:
        - in: path
          name: SilenceId
          required: true
          type: string
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
    get:
      description: get silence
      operationId: RouteGetSilence
      parameters:
        - in: path
          name: SilenceId
          required: true
          type: string
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: gettableSilence
          schema:
            $ref: '#/definitions/gettableSilence'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
  /api/alertmanager/{Recipient}/api/v2/silences:
    get:
      description: get silences
      operationId: RouteGetSilences
      parameters:
        - in: query
          items:
            type: string
          name: filter
          type: array
          x-go-name: Filter
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: gettableSilences
          schema:
            $ref: '#/definitions/gettableSilences'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
    post:
      description: create silence
      operationId: RouteCreateSilence
      parameters:
        - in: body
          name: Silence
          schema:
            $ref: '#/definitions/postableSilence'
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '201':
          description: gettableSilence
          schema:
            $ref: '#/definitions/gettableSilence'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
  /api/alertmanager/{Recipient}/api/v2/status:
    get:
      description: get alertmanager status and configuration
      operationId: RouteGetAMStatus
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: GettableStatus
          schema:
            $ref: '#/definitions/GettableStatus'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
  /api/alertmanager/{Recipient}/config/api/v1/alerts:
    delete:
      description: deletes the Alerting config for a tenant
      operationId: RouteDeleteAlertingConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
    get:
      description: gets an Alerting config
      operationId: RouteGetAlertingConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: GettableUserConfig
          schema:
            $ref: '#/definitions/GettableUserConfig'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
    post:
      description: sets an Alerting config
      operationId: RoutePostAlertingConfig
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/PostableUserConfig'
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '201':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      tags:
        - alertmanager
#  /api/alertmanager/{Recipient}/config/api/v1/receivers/test:
#    post:
#      operationId: RoutePostTestReceivers
#      parameters:
#        - in: body
#          name: alert
#          schema:
#            $ref: '#/definitions/TestReceiversConfigAlertParams'
#          x-go-name: Alert
#        - in: body
#          name: receivers
#          schema:
#            items:
#              $ref: '#/definitions/PostableApiReceiver'
#            type: array
#          x-go-name: Receivers
#        - description: >-
#            Recipient should be "grafana" for requests to be handled by grafana
#
#            and the numeric datasource id for requests to be forwarded to a
#            datasource
#          in: path
#          name: Recipient
#          required: true
#          type: string
#      responses:
#        '200':
#          description: Ack
#          schema:
#            $ref: '#/definitions/Ack'
#        '207':
#          description: MultiStatus
#          schema:
#            $ref: '#/definitions/MultiStatus'
#        '400':
#          description: ValidationError
#          schema:
#            $ref: '#/definitions/ValidationError'
#        '403':
#          description: PermissionDenied
#          schema:
#            $ref: '#/definitions/PermissionDenied'
#        '404':
#          description: AlertManagerNotFound
#          schema:
#            $ref: '#/definitions/AlertManagerNotFound'
#        '408':
#          description: Failure
#          schema:
#            $ref: '#/definitions/Failure'
#        '409':
#          description: AlertManagerNotReady
#          schema:
#            $ref: '#/definitions/AlertManagerNotReady'
#      summary: Test Grafana managed receivers without saving them.
#      tags:
#        - alertmanager
  /api/prometheus/{Recipient}/api/v1/alerts:
    get:
      description: gets the current alerts
      operationId: RouteGetAlertStatuses
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: AlertResponse
          schema:
            $ref: '#/definitions/AlertResponse'
      tags:
        - prometheus
  /api/prometheus/{Recipient}/api/v1/rules:
    get:
      description: gets the evaluation statuses of all rules
      operationId: RouteGetRuleStatuses
      parameters:
        - in: query
          name: DashboardUID
          type: string
        - format: int64
          in: query
          name: PanelID
          type: integer
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
      responses:
        '200':
          description: RuleResponse
          schema:
            $ref: '#/definitions/RuleResponse'
      tags:
        - prometheus
  /api/ruler/{Recipient}/api/v1/rules:
    get:
      description: List rule groups
      operationId: RouteGetRulesConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: query
          name: DashboardUID
          type: string
        - format: int64
          in: query
          name: PanelID
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: NamespaceConfigResponse
          schema:
            $ref: '#/definitions/NamespaceConfigResponse'
      tags:
        - ruler
  /api/ruler/{Recipient}/api/v1/rules/{Namespace}:
    delete:
      description: Delete namespace
      operationId: RouteDeleteNamespaceRulesConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: path
          name: Namespace
          required: true
          type: string
      responses:
        '202':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
      tags:
        - ruler
    get:
      description: Get rule groups by namespace
      operationId: RouteGetNamespaceRulesConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: path
          name: Namespace
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: NamespaceConfigResponse
          schema:
            $ref: '#/definitions/NamespaceConfigResponse'
      tags:
        - ruler
    post:
      consumes:
        - application/json
        - application/yaml
      description: Creates or updates a rule group
      operationId: RoutePostNameRulesConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: path
          name: Namespace
          required: true
          type: string
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/PostableRuleGroupConfig'
      responses:
        '202':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
      tags:
        - ruler
  /api/ruler/{Recipient}/api/v1/rules/{Namespace}/{Groupname}:
    delete:
      description: Delete rule group
      operationId: RouteDeleteRuleGroupConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: path
          name: Namespace
          required: true
          type: string
        - in: path
          name: Groupname
          required: true
          type: string
      responses:
        '202':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
      tags:
        - ruler
    get:
      description: Get rule group
      operationId: RouteGetRulegGroupConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: path
          name: Namespace
          required: true
          type: string
        - in: path
          name: Groupname
          required: true
          type: string
      produces:
        - application/json
      responses:
        '202':
          description: RuleGroupConfigResponse
          schema:
            $ref: '#/definitions/RuleGroupConfigResponse'
      tags:
        - ruler
  /api/v1/eval:
    post:
      consumes:
        - application/json
      description: Test rule
      operationId: RouteEvalQueries
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/EvalQueriesPayload'
      produces:
        - application/json
      responses:
        '200':
          description: EvalQueriesResponse
          schema:
            $ref: '#/definitions/EvalQueriesResponse'
      tags:
        - testing
  /api/v1/ngalert/admin_config:
    delete:
      consumes:
        - application/json
      operationId: RouteDeleteNGalertConfig
      responses:
        '200':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
        '500':
          description: Failure
          schema:
            $ref: '#/definitions/Failure'
      summary: Deletes the NGalert configuration of the user's organization.
      tags:
        - configuration
    get:
      operationId: RouteGetNGalertConfig
      produces:
        - application/json
      responses:
        '200':
          description: GettableNGalertConfig
          schema:
            $ref: '#/definitions/GettableNGalertConfig'
        '404':
          description: Failure
          schema:
            $ref: '#/definitions/Failure'
        '500':
          description: Failure
          schema:
            $ref: '#/definitions/Failure'
      summary: >-
        Get the NGalert configuration of the user's organization, returns 404 if
        no configuration is present.
      tags:
        - configuration
    post:
      consumes:
        - application/json
      operationId: RoutePostNGalertConfig
      parameters:
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/PostableNGalertConfig'
      responses:
        '201':
          description: Ack
          schema:
            $ref: '#/definitions/Ack'
        '400':
          description: ValidationError
          schema:
            $ref: '#/definitions/ValidationError'
      summary: Creates or updates the NGalert configuration of the user's organization.
      tags:
        - configuration
  /api/v1/ngalert/alertmanagers:
    get:
      operationId: RouteGetAlertmanagers
      produces:
        - application/json
      responses:
        '200':
          description: GettableAlertmanagers
          schema:
            $ref: '#/definitions/GettableAlertmanagers'
      summary: >-
        Get the discovered and dropped Alertmanagers of the user's organization
        based on the specified configuration.
      tags:
        - configuration
  /api/v1/rule/test/{Recipient}:
    post:
      consumes:
        - application/json
      description: Test rule
      operationId: RouteTestRuleConfig
      parameters:
        - description: >-
            Recipient should be "grafana" for requests to be handled by grafana

            and the numeric datasource id for requests to be forwarded to a
            datasource
          in: path
          name: Recipient
          required: true
          type: string
        - in: body
          name: Body
          schema:
            $ref: '#/definitions/TestRulePayload'
      produces:
        - application/json
      responses:
        '200':
          description: TestRuleResponse
          schema:
            $ref: '#/definitions/TestRuleResponse'
      tags:
        - testing
definitions:
  ActiveSyncStatusDTO:
    description: ActiveSyncStatusDTO holds the information for LDAP background Sync
    type: object
    properties:
      enabled:
        type: boolean
        x-go-name: Enabled
      nextSync:
        type: string
        format: date-time
        x-go-name: NextSync
      prevSync:
        $ref: '#/definitions/SyncResult'
      schedule:
        type: string
        x-go-name: Schedule
    x-go-package: github.com/grafana/grafana/pkg/extensions/ldapdebug
  ActiveUserStats:
    type: object
    properties:
      active_admins_and_editors:
        type: integer
        format: int64
        x-go-name: ActiveAdminsAndEditors
      active_users:
        type: integer
        format: int64
        x-go-name: ActiveUsers
      active_viewers:
        type: integer
        format: int64
        x-go-name: ActiveViewers
    x-go-package: github.com/grafana/grafana/pkg/extensions/licensing
  AddApiKeyCommand:
    description: COMMANDS
    type: object
    properties:
      name:
        type: string
        x-go-name: Name
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
      secondsToLive:
        type: integer
        format: int64
        x-go-name: SecondsToLive
    x-go-package: github.com/grafana/grafana/pkg/models
  AddBuiltInRoleCommand:
    type: object
    properties:
      builtInRole:
        type: string
        enum:
          - Viewer
          - ' Editor'
          - ' Admin'
          - ' Grafana Admin'
        x-go-name: BuiltinRole
      global:
        description: A flag indicating if the assignment is global or not. If set to false, the default org ID of the authenticated user will be used from the request to create organization local assignment. Refer to the Built-in role assignments for more information.
        type: boolean
        x-go-name: Global
      roleUid:
        type: string
        x-go-name: RoleUID
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  AddDataSourceCommand:
    description: Also acts as api DTO
    type: object
    properties:
      access:
        $ref: '#/definitions/DsAccess'
      basicAuth:
        type: boolean
        x-go-name: BasicAuth
      basicAuthPassword:
        type: string
        x-go-name: BasicAuthPassword
      basicAuthUser:
        type: string
        x-go-name: BasicAuthUser
      database:
        type: string
        x-go-name: Database
      isDefault:
        type: boolean
        x-go-name: IsDefault
      jsonData:
        $ref: '#/definitions/Json'
      name:
        type: string
        x-go-name: Name
      password:
        type: string
        x-go-name: Password
      secureJsonData:
        type: object
        additionalProperties:
          type: string
        x-go-name: SecureJsonData
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: Uid
      url:
        type: string
        x-go-name: Url
      user:
        type: string
        x-go-name: User
      withCredentials:
        type: boolean
        x-go-name: WithCredentials
    x-go-package: github.com/grafana/grafana/pkg/models
  AddInviteForm:
    type: object
    properties:
      loginOrEmail:
        type: string
        x-go-name: LoginOrEmail
      name:
        type: string
        x-go-name: Name
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
      sendEmail:
        type: boolean
        x-go-name: SendEmail
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AddOrgUserCommand:
    type: object
    properties:
      loginOrEmail:
        type: string
        x-go-name: LoginOrEmail
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
    x-go-package: github.com/grafana/grafana/pkg/models
  AddPermissionDTO:
    type: object
    properties:
      builtinRole:
        type: string
        x-go-name: BuiltinRole
      permission:
        $ref: '#/definitions/DsPermissionType'
      teamId:
        type: integer
        format: int64
        x-go-name: TeamId
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/extensions/dspermissions
  AddTeamMemberCommand:
    type: object
    properties:
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/models
  AddTeamRoleCommand:
    type: object
    properties:
      roleUid:
        type: string
        x-go-name: RoleUID
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  AddUserRoleCommand:
    type: object
    properties:
      global:
        type: boolean
        x-go-name: Global
      roleUid:
        type: string
        x-go-name: RoleUID
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  Address:
    type: object
    properties:
      address1:
        type: string
        x-go-name: Address1
      address2:
        type: string
        x-go-name: Address2
      city:
        type: string
        x-go-name: City
      country:
        type: string
        x-go-name: Country
      state:
        type: string
        x-go-name: State
      zipCode:
        type: string
        x-go-name: ZipCode
    x-go-package: github.com/grafana/grafana/pkg/models
  AdminCreateUserForm:
    type: object
    properties:
      email:
        type: string
        x-go-name: Email
      login:
        type: string
        x-go-name: Login
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      password:
        type: string
        x-go-name: Password
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AdminStats:
    type: object
    properties:
      activeAdmins:
        type: integer
        format: int64
        x-go-name: ActiveAdmins
      activeEditors:
        type: integer
        format: int64
        x-go-name: ActiveEditors
      activeSessions:
        type: integer
        format: int64
        x-go-name: ActiveSessions
      activeUsers:
        type: integer
        format: int64
        x-go-name: ActiveUsers
      activeViewers:
        type: integer
        format: int64
        x-go-name: ActiveViewers
      admins:
        type: integer
        format: int64
        x-go-name: Admins
      alerts:
        type: integer
        format: int64
        x-go-name: Alerts
      dailyActiveAdmins:
        type: integer
        format: int64
        x-go-name: DailyActiveAdmins
      dailyActiveEditors:
        type: integer
        format: int64
        x-go-name: DailyActiveEditors
      dailyActiveSessions:
        type: integer
        format: int64
        x-go-name: DailyActiveSessions
      dailyActiveUsers:
        type: integer
        format: int64
        x-go-name: DailyActiveUsers
      dailyActiveViewers:
        type: integer
        format: int64
        x-go-name: DailyActiveViewers
      dashboards:
        type: integer
        format: int64
        x-go-name: Dashboards
      datasources:
        type: integer
        format: int64
        x-go-name: Datasources
      editors:
        type: integer
        format: int64
        x-go-name: Editors
      monthlyActiveUsers:
        type: integer
        format: int64
        x-go-name: MonthlyActiveUsers
      orgs:
        type: integer
        format: int64
        x-go-name: Orgs
      playlists:
        type: integer
        format: int64
        x-go-name: Playlists
      snapshots:
        type: integer
        format: int64
        x-go-name: Snapshots
      stars:
        type: integer
        format: int64
        x-go-name: Stars
      tags:
        type: integer
        format: int64
        x-go-name: Tags
      users:
        type: integer
        format: int64
        x-go-name: Users
      viewers:
        type: integer
        format: int64
        x-go-name: Viewers
    x-go-package: github.com/grafana/grafana/pkg/models
  AdminUpdateUserPasswordForm:
    type: object
    properties:
      password:
        type: string
        x-go-name: Password
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AdminUpdateUserPermissionsForm:
    type: object
    properties:
      isGrafanaAdmin:
        type: boolean
        x-go-name: IsGrafanaAdmin
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  Alert:
    type: object
    properties:
      Created:
        type: string
        format: date-time
      DashboardId:
        type: integer
        format: int64
      EvalData:
        $ref: '#/definitions/Json'
      ExecutionError:
        type: string
      For:
        $ref: '#/definitions/Duration'
      Frequency:
        type: integer
        format: int64
      Handler:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Message:
        type: string
      Name:
        type: string
      NewStateDate:
        type: string
        format: date-time
      OrgId:
        type: integer
        format: int64
      PanelId:
        type: integer
        format: int64
      Settings:
        $ref: '#/definitions/Json'
      Severity:
        type: string
      Silenced:
        type: boolean
      State:
        $ref: '#/definitions/AlertStateType'
      StateChanges:
        type: integer
        format: int64
      Updated:
        type: string
        format: date-time
      Version:
        type: integer
        format: int64
    x-go-package: github.com/grafana/grafana/pkg/models
  AlertListItemDTO:
    type: object
    properties:
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      dashboardSlug:
        type: string
        x-go-name: DashboardSlug
      dashboardUid:
        type: string
        x-go-name: DashboardUid
      evalData:
        $ref: '#/definitions/Json'
      evalDate:
        type: string
        format: date-time
        x-go-name: EvalDate
      executionError:
        type: string
        x-go-name: ExecutionError
      id:
        type: integer
        format: int64
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
      newStateDate:
        type: string
        format: date-time
        x-go-name: NewStateDate
      panelId:
        type: integer
        format: int64
        x-go-name: PanelId
      state:
        $ref: '#/definitions/AlertStateType'
      url:
        type: string
        x-go-name: Url
    x-go-package: github.com/grafana/grafana/pkg/models
  AlertNotification:
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      frequency:
        type: string
        x-go-name: Frequency
      id:
        type: integer
        format: int64
        x-go-name: Id
      isDefault:
        type: boolean
        x-go-name: IsDefault
      name:
        type: string
        x-go-name: Name
      secureFields:
        type: object
        additionalProperties:
          type: boolean
        x-go-name: SecureFields
      sendReminder:
        type: boolean
        x-go-name: SendReminder
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: Uid
      updated:
        type: string
        format: date-time
        x-go-name: Updated
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AlertNotificationLookup:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: Id
      isDefault:
        type: boolean
        x-go-name: IsDefault
      name:
        type: string
        x-go-name: Name
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: Uid
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AlertStateInfoDTO:
    type: object
    properties:
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      id:
        type: integer
        format: int64
        x-go-name: Id
      newStateDate:
        type: string
        format: date-time
        x-go-name: NewStateDate
      panelId:
        type: integer
        format: int64
        x-go-name: PanelId
      state:
        $ref: '#/definitions/AlertStateType'
    x-go-package: github.com/grafana/grafana/pkg/models
  AlertStateType:
    type: string
    x-go-package: github.com/grafana/grafana/pkg/models
  AlertTestCommand:
    type: object
    properties:
      dashboard:
        $ref: '#/definitions/Json'
      panelId:
        type: integer
        format: int64
        x-go-name: PanelId
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AlertTestResult:
    type: object
    properties:
      conditionEvals:
        type: string
        x-go-name: ConditionEvals
      error:
        type: string
        x-go-name: Error
      firing:
        type: boolean
        x-go-name: Firing
      logs:
        type: array
        items:
          $ref: '#/definitions/AlertTestResultLog'
        x-go-name: Logs
      matches:
        type: array
        items:
          $ref: '#/definitions/EvalMatch'
        x-go-name: EvalMatches
      state:
        $ref: '#/definitions/AlertStateType'
      timeMs:
        type: string
        x-go-name: TimeMs
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AlertTestResultLog:
    type: object
    properties:
      data:
        type: object
        x-go-name: Data
      message:
        type: string
        x-go-name: Message
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AnnotationActions:
    type: object
    properties:
      canAdd:
        type: boolean
        x-go-name: CanAdd
      canDelete:
        type: boolean
        x-go-name: CanDelete
      canEdit:
        type: boolean
        x-go-name: CanEdit
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  AnnotationPermission:
    type: object
    properties:
      dashboard:
        $ref: '#/definitions/AnnotationActions'
      organization:
        $ref: '#/definitions/AnnotationActions'
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  ApiKeyDTO:
    type: object
    properties:
      accessControl:
        $ref: '#/definitions/Metadata'
      expiration:
        type: string
        format: date-time
        x-go-name: Expiration
      id:
        type: integer
        format: int64
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  BrandingOptionsDTO:
    type: object
    properties:
      emailFooterLink:
        type: string
        x-go-name: EmailFooterLink
      emailFooterMode:
        type: string
        x-go-name: EmailFooterMode
      emailFooterText:
        type: string
        x-go-name: EmailFooterText
      emailLogoUrl:
        type: string
        x-go-name: EmailLogo
      reportLogoUrl:
        type: string
        x-go-name: ReportLogo
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  CalculateDiffTarget:
    type: object
    properties:
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      unsavedDashboard:
        $ref: '#/definitions/Json'
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  ChangeUserPasswordCommand:
    type: object
    properties:
      newPassword:
        type: string
        x-go-name: NewPassword
      oldPassword:
        type: string
        x-go-name: OldPassword
    x-go-package: github.com/grafana/grafana/pkg/models
  ConfigDTO:
    description: ConfigDTO is model representation in transfer
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardID
      dashboardName:
        type: string
        x-go-name: DashboardName
      dashboardUid:
        type: string
        x-go-name: DashboardUID
      enableCsv:
        type: boolean
        x-go-name: EnableCSV
      enableDashboardUrl:
        type: boolean
        x-go-name: EnableDashboardURL
      id:
        type: integer
        format: int64
        x-go-name: ID
      message:
        type: string
        x-go-name: Message
      name:
        type: string
        x-go-name: Name
      options:
        $ref: '#/definitions/ReportOptionsDTO'
      orgId:
        type: integer
        format: int64
        x-go-name: OrgID
      recipients:
        type: string
        x-go-name: Recipients
      replyTo:
        type: string
        x-go-name: ReplyTo
      schedule:
        $ref: '#/definitions/ScheduleDTO'
      state:
        type: string
        x-go-name: State
      templateVars:
        type: object
        x-go-name: TemplateVars
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      userId:
        type: integer
        format: int64
        x-go-name: UserID
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  CreateAlertNotificationCommand:
    type: object
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      frequency:
        type: string
        x-go-name: Frequency
      isDefault:
        type: boolean
        x-go-name: IsDefault
      name:
        type: string
        x-go-name: Name
      secureSettings:
        type: object
        additionalProperties:
          type: string
        x-go-name: SecureSettings
      sendReminder:
        type: boolean
        x-go-name: SendReminder
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: Uid
    x-go-package: github.com/grafana/grafana/pkg/models
  CreateDashboardSnapshotCommand:
    type: object
    required:
      - dashboard
    properties:
      Result:
        $ref: '#/definitions/DashboardSnapshot'
      dashboard:
        $ref: '#/definitions/Json'
      deleteKey:
        description: Unique key used to delete the snapshot. It is different from the `key` so that only the creator can delete the snapshot. Required if `external` is `true`.
        type: string
        x-go-name: DeleteKey
      expires:
        description: When the snapshot should expire in seconds in seconds. Default is never to expire.
        type: integer
        format: int64
        default: 0
        x-go-name: Expires
      external:
        description: |-
          these are passed when storing an external snapshot ref
          Save the snapshot on an external server rather than locally.
        type: boolean
        default: false
        x-go-name: External
      key:
        description: Define the unique key. Required if `external` is `true`.
        type: string
        x-go-name: Key
      name:
        description: Snapshot name
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/models
  CreateFolderCommand:
    type: object
    properties:
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: Uid
    x-go-package: github.com/grafana/grafana/pkg/models
  CreateLibraryElementCommand:
    description: CreateLibraryElementCommand is the command for adding a LibraryElement
    type: object
    properties:
      folderId:
        description: ID of the folder where the library element is stored.
        type: integer
        format: int64
        x-go-name: FolderID
      folderUID:
        description: UID of the folder where the library element is stored.
        type: string
        x-go-name: FolderUID
      kind:
        description: |-
          Kind of element to create, Use 1 for library panels or 2 for c.
          Description:
          1 - library panels
          2 - library variables
        type: integer
        format: int64
        enum:
          - 1
          - 2
        x-go-name: Kind
      model:
        description: The JSON model for the library element.
        type: object
        x-go-name: Model
      name:
        description: Name of the library element.
        type: string
        x-go-name: Name
      uid:
        type: string
        x-go-name: UID
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  CreateOrUpdateConfigCmd:
    type: object
    properties:
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardID
      dashboardUid:
        type: string
        x-go-name: DashboardUID
      enableCsv:
        type: boolean
        x-go-name: EnableCSV
      enableDashboardUrl:
        type: boolean
        x-go-name: EnableDashboardURL
      message:
        type: string
        x-go-name: Message
      name:
        type: string
        x-go-name: Name
      options:
        $ref: '#/definitions/ReportOptionsDTO'
      recipients:
        type: string
        x-go-name: Recipients
      replyTo:
        type: string
        x-go-name: ReplyTo
      schedule:
        $ref: '#/definitions/ScheduleDTO'
      state:
        type: string
        x-go-name: State
      templateVars:
        type: object
        x-go-name: TemplateVars
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  CreateOrgCommand:
    type: object
    properties:
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/models
  CreateRoleWithPermissionsCommand:
    type: object
    properties:
      description:
        type: string
        x-go-name: Description
      displayName:
        type: string
        x-go-name: DisplayName
      group:
        type: string
        x-go-name: Group
      hidden:
        type: boolean
        x-go-name: Hidden
      name:
        type: string
        x-go-name: Name
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
        x-go-name: Permissions
      uid:
        type: string
        x-go-name: UID
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  CreateTeamCommand:
    type: object
    properties:
      email:
        type: string
        x-go-name: Email
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/models
  CustomPermissionsRecordDTO:
    type: object
    properties:
      customPermissions:
        type: string
        x-go-name: CustomPermissions
      granteeName:
        type: string
        x-go-name: GranteeName
      granteeType:
        type: string
        x-go-name: GranteeType
      granteeUrl:
        type: string
        x-go-name: GranteeURL
      id:
        type: integer
        format: int64
        x-go-name: ID
      isFolder:
        type: boolean
        x-go-name: IsFolder
      orgId:
        type: integer
        format: int64
        x-go-name: OrgID
      orgRole:
        type: string
        x-go-name: OrgRole
      slug:
        type: string
        x-go-name: Slug
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: UID
      url:
        type: string
        x-go-name: URL
      usersCount:
        type: integer
        format: int64
        x-go-name: UsersCount
    x-go-package: github.com/grafana/grafana/pkg/extensions/licensing
  DashboardAclInfoDTO:
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      folderId:
        type: integer
        format: int64
        x-go-name: FolderId
      inherited:
        type: boolean
        x-go-name: Inherited
      isFolder:
        type: boolean
        x-go-name: IsFolder
      permission:
        $ref: '#/definitions/PermissionType'
      permissionName:
        type: string
        x-go-name: PermissionName
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
      slug:
        type: string
        x-go-name: Slug
      team:
        type: string
        x-go-name: Team
      teamAvatarUrl:
        type: string
        x-go-name: TeamAvatarUrl
      teamEmail:
        type: string
        x-go-name: TeamEmail
      teamId:
        type: integer
        format: int64
        x-go-name: TeamId
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: Uid
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      url:
        type: string
        x-go-name: Url
      userAvatarUrl:
        type: string
        x-go-name: UserAvatarUrl
      userEmail:
        type: string
        x-go-name: UserEmail
      userId:
        type: integer
        format: int64
        x-go-name: UserId
      userLogin:
        type: string
        x-go-name: UserLogin
    x-go-package: github.com/grafana/grafana/pkg/models
  DashboardAclUpdateItem:
    type: object
    properties:
      permission:
        $ref: '#/definitions/PermissionType'
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
      teamId:
        type: integer
        format: int64
        x-go-name: TeamID
      userId:
        type: integer
        format: int64
        x-go-name: UserID
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DashboardFullWithMeta:
    type: object
    properties:
      dashboard:
        $ref: '#/definitions/Json'
      meta:
        $ref: '#/definitions/DashboardMeta'
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DashboardMeta:
    type: object
    properties:
      annotationsPermissions:
        $ref: '#/definitions/AnnotationPermission'
      canAdmin:
        type: boolean
        x-go-name: CanAdmin
      canDelete:
        type: boolean
        x-go-name: CanDelete
      canEdit:
        type: boolean
        x-go-name: CanEdit
      canSave:
        type: boolean
        x-go-name: CanSave
      canStar:
        type: boolean
        x-go-name: CanStar
      created:
        type: string
        format: date-time
        x-go-name: Created
      createdBy:
        type: string
        x-go-name: CreatedBy
      expires:
        type: string
        format: date-time
        x-go-name: Expires
      folderId:
        type: integer
        format: int64
        x-go-name: FolderId
      folderTitle:
        type: string
        x-go-name: FolderTitle
      folderUid:
        type: string
        x-go-name: FolderUid
      folderUrl:
        type: string
        x-go-name: FolderUrl
      hasAcl:
        type: boolean
        x-go-name: HasAcl
      isFolder:
        type: boolean
        x-go-name: IsFolder
      isHome:
        type: boolean
        x-go-name: IsHome
      isSnapshot:
        type: boolean
        x-go-name: IsSnapshot
      isStarred:
        type: boolean
        x-go-name: IsStarred
      provisioned:
        type: boolean
        x-go-name: Provisioned
      provisionedExternalId:
        type: string
        x-go-name: ProvisionedExternalId
      slug:
        type: string
        x-go-name: Slug
      type:
        type: string
        x-go-name: Type
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      updatedBy:
        type: string
        x-go-name: UpdatedBy
      url:
        type: string
        x-go-name: Url
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DashboardRedirect:
    type: object
    properties:
      redirectUri:
        type: string
        x-go-name: RedirectUri
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DashboardSnapshot:
    description: DashboardSnapshot model
    type: object
    properties:
      Created:
        type: string
        format: date-time
      Dashboard:
        $ref: '#/definitions/Json'
      DashboardEncrypted:
        type: array
        items:
          type: integer
          format: uint8
      DeleteKey:
        type: string
      Expires:
        type: string
        format: date-time
      External:
        type: boolean
      ExternalDeleteUrl:
        type: string
      ExternalUrl:
        type: string
      Id:
        type: integer
        format: int64
      Key:
        type: string
      Name:
        type: string
      OrgId:
        type: integer
        format: int64
      Updated:
        type: string
        format: date-time
      UserId:
        type: integer
        format: int64
    x-go-package: github.com/grafana/grafana/pkg/models
  DashboardSnapshotDTO:
    description: DashboardSnapshotDTO without dashboard map
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      expires:
        type: string
        format: date-time
        x-go-name: Expires
      external:
        type: boolean
        x-go-name: External
      externalUrl:
        type: string
        x-go-name: ExternalUrl
      id:
        type: integer
        format: int64
        x-go-name: Id
      key:
        type: string
        x-go-name: Key
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/models
  DashboardTagCloudItem:
    type: object
    properties:
      count:
        type: integer
        format: int64
        x-go-name: Count
      term:
        type: string
        x-go-name: Term
    x-go-package: github.com/grafana/grafana/pkg/models
  DashboardVersionDTO:
    description: |-
      DashboardVersionDTO represents a dashboard version, without the dashboard
      map.
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      createdBy:
        type: string
        x-go-name: CreatedBy
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      id:
        type: integer
        format: int64
        x-go-name: Id
      message:
        type: string
        x-go-name: Message
      parentVersion:
        type: integer
        format: int64
        x-go-name: ParentVersion
      restoredFrom:
        type: integer
        format: int64
        x-go-name: RestoredFrom
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/models
  DashboardVersionMeta:
    description: |-
      DashboardVersionMeta extends the dashboard version model with the names
      associated with the UserIds, overriding the field with the same name from
      the DashboardVersion model.
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      createdBy:
        type: string
        x-go-name: CreatedBy
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      data:
        $ref: '#/definitions/Json'
      id:
        type: integer
        format: int64
        x-go-name: Id
      message:
        type: string
        x-go-name: Message
      parentVersion:
        type: integer
        format: int64
        x-go-name: ParentVersion
      restoredFrom:
        type: integer
        format: int64
        x-go-name: RestoredFrom
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/models
  DataFrames:
    description: See NewDecodedDataFrames and NewEncodedDataFrames for more information.
    type: object
    title: DataFrames is an interface for retrieving encoded and decoded data frames.
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataQueryResult:
    description: 'Deprecated: DataQueryResult should use backend.QueryDataResponse'
    type: object
    properties:
      dataframes:
        $ref: '#/definitions/DataFrames'
      error:
        type: string
        x-go-name: ErrorString
      meta:
        $ref: '#/definitions/Json'
      refId:
        type: string
        x-go-name: RefID
      series:
        $ref: '#/definitions/DataTimeSeriesSlice'
      tables:
        type: array
        items:
          $ref: '#/definitions/DataTable'
        x-go-name: Tables
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataResponse:
    description: 'Deprecated: DataResponse -- this structure is deprecated, all new work should use backend.QueryDataResponse'
    type: object
    properties:
      message:
        type: string
        x-go-name: Message
      results:
        type: object
        additionalProperties:
          $ref: '#/definitions/DataQueryResult'
        x-go-name: Results
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataRowValues:
    type: array
    items:
      type: object
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataSource:
    type: object
    properties:
      access:
        $ref: '#/definitions/DsAccess'
      accessControl:
        $ref: '#/definitions/Metadata'
      basicAuth:
        type: boolean
        x-go-name: BasicAuth
      basicAuthPassword:
        type: string
        x-go-name: BasicAuthPassword
      basicAuthUser:
        type: string
        x-go-name: BasicAuthUser
      database:
        type: string
        x-go-name: Database
      id:
        type: integer
        format: int64
        x-go-name: Id
      isDefault:
        type: boolean
        x-go-name: IsDefault
      jsonData:
        $ref: '#/definitions/Json'
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      password:
        type: string
        x-go-name: Password
      readOnly:
        type: boolean
        x-go-name: ReadOnly
      secureJsonFields:
        type: object
        additionalProperties:
          type: boolean
        x-go-name: SecureJsonFields
      type:
        type: string
        x-go-name: Type
      typeLogoUrl:
        type: string
        x-go-name: TypeLogoUrl
      uid:
        type: string
        x-go-name: UID
      url:
        type: string
        x-go-name: Url
      user:
        type: string
        x-go-name: User
      version:
        type: integer
        format: int64
        x-go-name: Version
      withCredentials:
        type: boolean
        x-go-name: WithCredentials
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DataSourceList:
    type: array
    items:
      $ref: '#/definitions/DataSourceListItemDTO'
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DataSourceListItemDTO:
    type: object
    properties:
      access:
        $ref: '#/definitions/DsAccess'
      basicAuth:
        type: boolean
        x-go-name: BasicAuth
      database:
        type: string
        x-go-name: Database
      id:
        type: integer
        format: int64
        x-go-name: Id
      isDefault:
        type: boolean
        x-go-name: IsDefault
      jsonData:
        $ref: '#/definitions/Json'
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      password:
        type: string
        x-go-name: Password
      readOnly:
        type: boolean
        x-go-name: ReadOnly
      type:
        type: string
        x-go-name: Type
      typeLogoUrl:
        type: string
        x-go-name: TypeLogoUrl
      typeName:
        type: string
        x-go-name: TypeName
      uid:
        type: string
        x-go-name: UID
      url:
        type: string
        x-go-name: Url
      user:
        type: string
        x-go-name: User
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  DataTable:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/DataTableColumn'
        x-go-name: Columns
      rows:
        type: array
        items:
          $ref: '#/definitions/DataRowValues'
        x-go-name: Rows
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataTableColumn:
    type: object
    properties:
      text:
        type: string
        x-go-name: Text
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataTimePoint:
    type: array
    items:
      $ref: '#/definitions/Float'
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataTimeSeries:
    description: DataTimeSeries -- this structure is deprecated, all new work should use DataFrames from the SDK
    type: object
    properties:
      name:
        type: string
        x-go-name: Name
      points:
        $ref: '#/definitions/DataTimeSeriesPoints'
      tags:
        type: object
        additionalProperties:
          type: string
        x-go-name: Tags
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataTimeSeriesPoints:
    type: array
    items:
      $ref: '#/definitions/DataTimePoint'
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DataTimeSeriesSlice:
    type: array
    items:
      $ref: '#/definitions/DataTimeSeries'
    x-go-package: github.com/grafana/grafana/pkg/tsdb/legacydata
  DeleteTokenCommand:
    type: object
    properties:
      instance:
        type: string
        x-go-name: Instance
    x-go-package: github.com/grafana/grafana/pkg/extensions/licensing
  DsAccess:
    type: string
    x-go-package: github.com/grafana/grafana/pkg/models
  DsPermissionType:
    description: |-
      Datasource permission
      Description:
      `0` - No Access
      `1` - Query
      Enum: 0,1
    type: integer
    format: int64
    x-go-package: github.com/grafana/grafana/pkg/models
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    type: string
    format: duration
    x-go-package: time
  ErrorResponseBody:
    type: object
    required:
      - message
    properties:
      error:
        description: Error An optional detailed description of the actual error. Only included if running in developer mode.
        type: string
        x-go-name: Error
      message:
        description: a human readable version of the error
        type: string
        x-go-name: Message
      status:
        description: |-
          Status An optional status to denote the cause of the error.

          For example, a 412 Precondition Failed error may include additional information of why that error happened.
        type: string
        x-go-name: Status
    x-go-package: github.com/grafana/grafana/pkg/api/docs/definitions
  EvalMatch:
    type: object
    properties:
      metric:
        type: string
        x-go-name: Metric
      tags:
        type: object
        additionalProperties:
          type: string
        x-go-name: Tags
      value:
        $ref: '#/definitions/Float'
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  FailedUser:
    description: FailedUser holds the information of an user that failed
    type: object
    properties:
      Error:
        type: string
      Login:
        type: string
    x-go-package: github.com/grafana/grafana/pkg/extensions/ldapsync
  FindTagsResult:
    type: object
    title: FindTagsResult is the result of a tags search.
    properties:
      tags:
        type: array
        items:
          $ref: '#/definitions/TagsDTO'
        x-go-name: Tags
    x-go-package: github.com/grafana/grafana/pkg/services/annotations
  Float:
    description: |-
      It does not consider zero values to be null.
      It will decode to null, not zero, if null.
    type: object
    title: Float is a nullable float64.
    properties:
      Float64:
        type: number
        format: double
      Valid:
        type: boolean
    x-go-package: github.com/grafana/grafana/pkg/components/null
  Folder:
    type: object
    properties:
      canAdmin:
        type: boolean
        x-go-name: CanAdmin
      canDelete:
        type: boolean
        x-go-name: CanDelete
      canEdit:
        type: boolean
        x-go-name: CanEdit
      canSave:
        type: boolean
        x-go-name: CanSave
      created:
        type: string
        format: date-time
        x-go-name: Created
      createdBy:
        type: string
        x-go-name: CreatedBy
      hasAcl:
        type: boolean
        x-go-name: HasAcl
      id:
        type: integer
        format: int64
        x-go-name: Id
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: Uid
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      updatedBy:
        type: string
        x-go-name: UpdatedBy
      url:
        type: string
        x-go-name: Url
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  FolderSearchHit:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: Id
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: Uid
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  GetAnnotationTagsResponse:
    type: object
    title: GetAnnotationTagsResponse is a response struct for FindTagsResult.
    properties:
      result:
        $ref: '#/definitions/FindTagsResult'
    x-go-package: github.com/grafana/grafana/pkg/services/annotations
  GetHomeDashboardResponse:
    title: Get home dashboard response.
    allOf:
      - type: object
        properties:
          dashboard:
            $ref: '#/definitions/Json'
          meta:
            $ref: '#/definitions/DashboardMeta'
      - type: object
        properties:
          redirectUri:
            type: string
            x-go-name: RedirectUri
    x-go-name: GetHomeDashboardResponseBody
    x-go-package: github.com/grafana/grafana/pkg/api/docs/definitions
  Hit:
    type: object
    properties:
      folderId:
        type: integer
        format: int64
        x-go-name: FolderID
      folderTitle:
        type: string
        x-go-name: FolderTitle
      folderUid:
        type: string
        x-go-name: FolderUID
      folderUrl:
        type: string
        x-go-name: FolderURL
      id:
        type: integer
        format: int64
        x-go-name: ID
      isStarred:
        type: boolean
        x-go-name: IsStarred
      slug:
        type: string
        x-go-name: Slug
      sortMeta:
        type: integer
        format: int64
        x-go-name: SortMeta
      sortMetaName:
        type: string
        x-go-name: SortMetaName
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      title:
        type: string
        x-go-name: Title
      type:
        $ref: '#/definitions/HitType'
      uid:
        type: string
        x-go-name: UID
      uri:
        type: string
        x-go-name: URI
      url:
        type: string
        x-go-name: URL
    x-go-package: github.com/grafana/grafana/pkg/models
  HitList:
    type: array
    items:
      $ref: '#/definitions/Hit'
    x-go-package: github.com/grafana/grafana/pkg/models
  HitType:
    type: string
    x-go-package: github.com/grafana/grafana/pkg/models
  ImportDashboardInput:
    type: object
    title: ImportDashboardInput definition of input parameters when importing a dashboard.
    properties:
      name:
        type: string
        x-go-name: Name
      pluginId:
        type: string
        x-go-name: PluginId
      type:
        type: string
        x-go-name: Type
      value:
        type: string
        x-go-name: Value
    x-go-package: github.com/grafana/grafana/pkg/services/dashboardimport
  ImportDashboardRequest:
    type: object
    title: ImportDashboardRequest request object for importing a dashboard.
    properties:
      dashboard:
        $ref: '#/definitions/Json'
      folderId:
        type: integer
        format: int64
        x-go-name: FolderId
      folderUid:
        type: string
        x-go-name: FolderUid
      inputs:
        type: array
        items:
          $ref: '#/definitions/ImportDashboardInput'
        x-go-name: Inputs
      overwrite:
        type: boolean
        x-go-name: Overwrite
      path:
        type: string
        x-go-name: Path
      pluginId:
        type: string
        x-go-name: PluginId
    x-go-package: github.com/grafana/grafana/pkg/services/dashboardimport
  ImportDashboardResponse:
    type: object
    title: ImportDashboardResponse response object returned when importing a dashboard.
    properties:
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      description:
        type: string
        x-go-name: Description
      folderId:
        type: integer
        format: int64
        x-go-name: FolderId
      imported:
        type: boolean
        x-go-name: Imported
      importedRevision:
        type: integer
        format: int64
        x-go-name: ImportedRevision
      importedUri:
        type: string
        x-go-name: ImportedUri
      importedUrl:
        type: string
        x-go-name: ImportedUrl
      path:
        type: string
        x-go-name: Path
      pluginId:
        type: string
        x-go-name: PluginId
      removed:
        type: boolean
        x-go-name: Removed
      revision:
        type: integer
        format: int64
        x-go-name: Revision
      slug:
        type: string
        x-go-name: Slug
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: UID
    x-go-package: github.com/grafana/grafana/pkg/services/dashboardimport
  ItemDTO:
    type: object
    properties:
      alertId:
        type: integer
        format: int64
        x-go-name: AlertId
      alertName:
        type: string
        x-go-name: AlertName
      avatarUrl:
        type: string
        x-go-name: AvatarUrl
      created:
        type: integer
        format: int64
        x-go-name: Created
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      dashboardUID:
        type: string
        x-go-name: DashboardUID
      data:
        $ref: '#/definitions/Json'
      email:
        type: string
        x-go-name: Email
      id:
        type: integer
        format: int64
        x-go-name: Id
      login:
        type: string
        x-go-name: Login
      newState:
        type: string
        x-go-name: NewState
      panelId:
        type: integer
        format: int64
        x-go-name: PanelId
      prevState:
        type: string
        x-go-name: PrevState
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      text:
        type: string
        x-go-name: Text
      time:
        type: integer
        format: int64
        x-go-name: Time
      timeEnd:
        type: integer
        format: int64
        x-go-name: TimeEnd
      updated:
        type: integer
        format: int64
        x-go-name: Updated
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/services/annotations
  Json:
    type: object
    x-go-package: github.com/grafana/grafana/pkg/components/simplejson
  LibraryElementConnectionDTO:
    type: object
    title: LibraryElementConnectionDTO is the frontend DTO for element connections.
    properties:
      connectionId:
        type: integer
        format: int64
        x-go-name: ConnectionID
      created:
        type: string
        format: date-time
        x-go-name: Created
      createdBy:
        $ref: '#/definitions/LibraryElementDTOMetaUser'
      elementId:
        type: integer
        format: int64
        x-go-name: ElementID
      id:
        type: integer
        format: int64
        x-go-name: ID
      kind:
        type: integer
        format: int64
        x-go-name: Kind
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementConnectionsResponse:
    type: object
    title: LibraryElementConnectionsResponse is a response struct for an array of LibraryElementConnectionDTO.
    properties:
      result:
        type: array
        items:
          $ref: '#/definitions/LibraryElementConnectionDTO'
        x-go-name: Result
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementDTO:
    type: object
    title: LibraryElementDTO is the frontend DTO for entities.
    properties:
      description:
        type: string
        x-go-name: Description
      folderId:
        type: integer
        format: int64
        x-go-name: FolderID
      folderUID:
        type: string
        x-go-name: FolderUID
      id:
        type: integer
        format: int64
        x-go-name: ID
      kind:
        type: integer
        format: int64
        x-go-name: Kind
      meta:
        $ref: '#/definitions/LibraryElementDTOMeta'
      model:
        type: object
        x-go-name: Model
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgID
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: UID
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementDTOMeta:
    type: object
    title: LibraryElementDTOMeta is the meta information for LibraryElementDTO.
    properties:
      connectedDashboards:
        type: integer
        format: int64
        x-go-name: ConnectedDashboards
      created:
        type: string
        format: date-time
        x-go-name: Created
      createdBy:
        $ref: '#/definitions/LibraryElementDTOMetaUser'
      folderName:
        type: string
        x-go-name: FolderName
      folderUid:
        type: string
        x-go-name: FolderUID
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      updatedBy:
        $ref: '#/definitions/LibraryElementDTOMetaUser'
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementDTOMetaUser:
    type: object
    title: LibraryElementDTOMetaUser is the meta information for user that creates/changes the library element.
    properties:
      avatarUrl:
        type: string
        x-go-name: AvatarURL
      id:
        type: integer
        format: int64
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementResponse:
    type: object
    title: LibraryElementResponse is a response struct for LibraryElementDTO.
    properties:
      result:
        $ref: '#/definitions/LibraryElementDTO'
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementSearchResponse:
    type: object
    title: LibraryElementSearchResponse is a response struct for LibraryElementSearchResult.
    properties:
      result:
        $ref: '#/definitions/LibraryElementSearchResult'
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  LibraryElementSearchResult:
    type: object
    title: LibraryElementSearchResult is the search result for entities.
    properties:
      elements:
        type: array
        items:
          $ref: '#/definitions/LibraryElementDTO'
        x-go-name: Elements
      page:
        type: integer
        format: int64
        x-go-name: Page
      perPage:
        type: integer
        format: int64
        x-go-name: PerPage
      totalCount:
        type: integer
        format: int64
        x-go-name: TotalCount
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  MassDeleteAnnotationsCmd:
    type: object
    properties:
      annotationId:
        type: integer
        format: int64
        x-go-name: AnnotationId
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      dashboardUID:
        type: string
        x-go-name: DashboardUID
      panelId:
        type: integer
        format: int64
        x-go-name: PanelId
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  Metadata:
    description: |-
      Metadata contains user accesses for a given resource
      Ex: map[string]bool{"create":true, "delete": true}
    type: object
    additionalProperties:
      type: boolean
    x-go-package: github.com/grafana/grafana/pkg/services/accesscontrol
  MetricRequest:
    type: object
    required:
      - from
      - to
      - queries
    properties:
      debug:
        type: boolean
        x-go-name: Debug
      from:
        description: From Start time in epoch timestamps in milliseconds or relative using Grafana time units.
        type: string
        x-go-name: From
        example: now-1h
      queries:
        description: |-
          queries.refId – Specifies an identifier of the query. Is optional and default to “A”.
          queries.datasourceId – Specifies the data source to be queried. Each query in the request must have an unique datasourceId.
          queries.maxDataPoints - Species maximum amount of data points that dashboard panel can render. Is optional and default to 100.
          queries.intervalMs - Specifies the time interval in milliseconds of time series. Is optional and defaults to 1000.
        type: array
        items:
          $ref: '#/definitions/Json'
        x-go-name: Queries
        example:
          - datasource:
              uid: PD8C576611E62080A
            format: table
            intervalMs: 86400000
            maxDataPoints: 1092
            rawSql: SELECT 1 as valueOne, 2 as valueTwo
            refId: A
      to:
        description: To End time in epoch timestamps in milliseconds or relative using Grafana time units.
        type: string
        x-go-name: To
        example: now
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  NavLink:
    type: object
    properties:
      id:
        type: string
        x-go-name: Id
      target:
        type: string
        x-go-name: Target
      text:
        type: string
        x-go-name: Text
      url:
        type: string
        x-go-name: Url
    x-go-package: github.com/grafana/grafana/pkg/models
  NavbarPreference:
    type: object
    properties:
      savedItems:
        type: array
        items:
          $ref: '#/definitions/NavLink'
        x-go-name: SavedItems
    x-go-package: github.com/grafana/grafana/pkg/services/preference
  NewApiKeyResult:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: ID
      key:
        type: string
        x-go-name: Key
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  NotificationTestCommand:
    type: object
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      frequency:
        type: string
        x-go-name: Frequency
      id:
        type: integer
        format: int64
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
      secureSettings:
        type: object
        additionalProperties:
          type: string
        x-go-name: SecureSettings
      sendReminder:
        type: boolean
        x-go-name: SendReminder
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  OrgDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/models
  OrgDetailsDTO:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      id:
        type: integer
        format: int64
        x-go-name: Id
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/models
  OrgUserDTO:
    type: object
    properties:
      accessControl:
        type: object
        additionalProperties:
          type: boolean
        x-go-name: AccessControl
      avatarUrl:
        type: string
        x-go-name: AvatarUrl
      email:
        type: string
        x-go-name: Email
      lastSeenAt:
        type: string
        format: date-time
        x-go-name: LastSeenAt
      lastSeenAtAge:
        type: string
        x-go-name: LastSeenAtAge
      login:
        type: string
        x-go-name: Login
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      role:
        type: string
        x-go-name: Role
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/models
  PatchAnnotationsCmd:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: Id
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      text:
        type: string
        x-go-name: Text
      time:
        type: integer
        format: int64
        x-go-name: Time
      timeEnd:
        type: integer
        format: int64
        x-go-name: TimeEnd
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  PatchLibraryElementCommand:
    description: PatchLibraryElementCommand is the command for patching a LibraryElement
    type: object
    properties:
      folderId:
        description: ID of the folder where the library element is stored.
        type: integer
        format: int64
        x-go-name: FolderID
      folderUID:
        description: UID of the folder where the library element is stored.
        type: string
        x-go-name: FolderUID
      kind:
        description: |-
          Kind of element to create, Use 1 for library panels or 2 for c.
          Description:
          1 - library panels
          2 - library variables
        type: integer
        format: int64
        enum:
          - 1
          - 2
        x-go-name: Kind
      model:
        description: The JSON model for the library element.
        type: object
        x-go-name: Model
      name:
        description: Name of the library element.
        type: string
        x-go-name: Name
      uid:
        type: string
        x-go-name: UID
      version:
        description: Version of the library element you are updating.
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/services/libraryelements
  PatchPrefsCmd:
    type: object
    properties:
      homeDashboardId:
        description: The numerical :id of a favorited dashboard
        type: integer
        format: int64
        default: 0
        x-go-name: HomeDashboardID
      homeDashboardUID:
        type: string
        x-go-name: HomeDashboardUID
      navbar:
        $ref: '#/definitions/NavbarPreference'
      queryHistory:
        $ref: '#/definitions/QueryHistoryPreference'
      theme:
        type: string
        enum:
          - light
          - dark
        x-go-name: Theme
      timezone:
        type: string
        enum:
          - utc
          - browser
        x-go-name: Timezone
      weekStart:
        type: string
        x-go-name: WeekStart
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  PauseAlertCommand:
    type: object
    properties:
      alertId:
        type: integer
        format: int64
        x-go-name: AlertId
      paused:
        type: boolean
        x-go-name: Paused
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  PauseAllAlertsCommand:
    type: object
    properties:
      paused:
        type: boolean
        x-go-name: Paused
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  Permission:
    type: object
    title: Permission is the model for access control permissions.
    properties:
      action:
        type: string
        x-go-name: Action
      created:
        type: string
        format: date-time
        x-go-name: Created
      scope:
        type: string
        x-go-name: Scope
      updated:
        type: string
        format: date-time
        x-go-name: Updated
    x-go-package: github.com/grafana/grafana/pkg/services/accesscontrol
  PermissionType:
    type: integer
    format: int64
    x-go-package: github.com/grafana/grafana/pkg/models
  PostAnnotationsCmd:
    type: object
    properties:
      dashboardId:
        type: integer
        format: int64
        x-go-name: DashboardId
      dashboardUID:
        type: string
        x-go-name: DashboardUID
      data:
        $ref: '#/definitions/Json'
      panelId:
        type: integer
        format: int64
        x-go-name: PanelId
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      text:
        type: string
        x-go-name: Text
      time:
        type: integer
        format: int64
        x-go-name: Time
      timeEnd:
        type: integer
        format: int64
        x-go-name: TimeEnd
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  PostGraphiteAnnotationsCmd:
    type: object
    properties:
      data:
        type: string
        x-go-name: Data
      tags:
        type: object
        x-go-name: Tags
      what:
        type: string
        x-go-name: What
      when:
        type: integer
        format: int64
        x-go-name: When
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  Prefs:
    type: object
    properties:
      homeDashboardId:
        type: integer
        format: int64
        x-go-name: HomeDashboardID
      homeDashboardUID:
        type: string
        x-go-name: HomeDashboardUID
      navbar:
        $ref: '#/definitions/NavbarPreference'
      queryHistory:
        $ref: '#/definitions/QueryHistoryPreference'
      theme:
        type: string
        x-go-name: Theme
      timezone:
        type: string
        x-go-name: Timezone
      weekStart:
        type: string
        x-go-name: WeekStart
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  PrometheusRemoteWriteTargetJSON:
    type: object
    properties:
      data_source_uid:
        type: string
        x-go-name: DatasourceUID
      id:
        type: string
        x-go-name: ID
      remote_write_path:
        type: string
        x-go-name: WritePath
    x-go-package: github.com/grafana/grafana/pkg/extensions/recordedqueries/api
  QueryDataResponse:
    description: It is the return type of a QueryData call.
    type: object
    title: QueryDataResponse contains the results from a QueryDataRequest.
    properties:
      Responses:
        $ref: '#/definitions/Responses'
    x-go-package: github.com/grafana/grafana-plugin-sdk-go/backend
  QueryHistoryPreference:
    type: object
    properties:
      homeTab:
        type: string
        x-go-name: HomeTab
    x-go-package: github.com/grafana/grafana/pkg/services/preference
  RecordingRuleJSON:
    description: RecordingRuleJSON is the external representation of a recording rule
    type: object
    properties:
      active:
        type: boolean
        x-go-name: Active
      count:
        type: boolean
        x-go-name: Count
      description:
        type: string
        x-go-name: Description
      dest_data_source_uid:
        type: string
        x-go-name: DestDataSourceUID
      id:
        type: string
        x-go-name: ID
      interval:
        type: integer
        format: int64
        x-go-name: Interval
      name:
        type: string
        x-go-name: Name
      prom_name:
        type: string
        x-go-name: PromName
      queries:
        type: array
        items:
          type: object
          additionalProperties:
            type: object
        x-go-name: Queries
      range:
        type: integer
        format: int64
        x-go-name: Range
      target_ref_id:
        type: string
        x-go-name: TargetRefID
    x-go-package: github.com/grafana/grafana/pkg/extensions/recordedqueries/api
  ReportEmailDTO:
    type: object
    properties:
      email:
        type: string
        x-go-name: Email
      emails:
        description: Comma-separated list of emails to which to send the report to.
        type: string
        x-go-name: Emails
      id:
        description: Send the report to the emails specified in the report. Required if emails is not present.
        type: string
        format: int64
        x-go-name: Id
      useEmailsFromReport:
        description: Send the report to the emails specified in the report. Required if emails is not present.
        type: boolean
        x-go-name: UseEmailsFromReport
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  ReportOptionsDTO:
    type: object
    properties:
      layout:
        type: string
        x-go-name: Layout
      orientation:
        type: string
        x-go-name: Orientation
      timeRange:
        $ref: '#/definitions/TimeRangeDTO'
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  Responses:
    description: |-
      The QueryData method the QueryDataHandler method will set the RefId
      property on the DataRespones' frames based on these RefIDs.
    type: object
    title: Responses is a map of RefIDs (Unique Query ID) to DataResponses.
    additionalProperties:
      $ref: '#/definitions/DataResponse'
    x-go-package: github.com/grafana/grafana-plugin-sdk-go/backend
  RevokeAuthTokenCmd:
    type: object
    properties:
      authTokenId:
        type: integer
        format: int64
        x-go-name: AuthTokenId
    x-go-package: github.com/grafana/grafana/pkg/models
  RoleDTO:
    type: object
    properties:
      created:
        type: string
        format: date-time
        x-go-name: Created
      delegatable:
        type: boolean
        x-go-name: Delegatable
      description:
        type: string
        x-go-name: Description
      displayName:
        type: string
        x-go-name: DisplayName
      group:
        type: string
        x-go-name: Group
      hidden:
        type: boolean
        x-go-name: Hidden
      name:
        type: string
        x-go-name: Name
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
        x-go-name: Permissions
      uid:
        type: string
        x-go-name: UID
      updated:
        type: string
        format: date-time
        x-go-name: Updated
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/services/accesscontrol
  SaveDashboardCommand:
    type: object
    properties:
      UpdatedAt:
        type: string
        format: date-time
      dashboard:
        $ref: '#/definitions/Json'
      folderId:
        type: integer
        format: int64
        x-go-name: FolderId
      folderUid:
        type: string
        x-go-name: FolderUid
      isFolder:
        type: boolean
        x-go-name: IsFolder
      message:
        type: string
        x-go-name: Message
      overwrite:
        type: boolean
        x-go-name: Overwrite
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/models
  ScheduleDTO:
    type: object
    properties:
      day:
        type: string
        x-go-name: Day
      dayOfMonth:
        type: string
        x-go-name: DayOfMonth
      endDate:
        type: string
        format: date-time
        x-go-name: EndDate
      frequency:
        type: string
        x-go-name: Frequency
      hour:
        type: integer
        format: int64
        x-go-name: Hour
      intervalAmount:
        type: integer
        format: int64
        x-go-name: IntervalAmount
      intervalFrequency:
        type: string
        x-go-name: IntervalFrequency
      minute:
        type: integer
        format: int64
        x-go-name: Minute
      startDate:
        type: string
        format: date-time
        x-go-name: StartDate
      timeZone:
        type: string
        x-go-name: TimeZone
      workdaysOnly:
        type: boolean
        x-go-name: WorkdaysOnly
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  SearchTeamQueryResult:
    type: object
    properties:
      page:
        type: integer
        format: int64
        x-go-name: Page
      perPage:
        type: integer
        format: int64
        x-go-name: PerPage
      teams:
        type: array
        items:
          $ref: '#/definitions/TeamDTO'
        x-go-name: Teams
      totalCount:
        type: integer
        format: int64
        x-go-name: TotalCount
    x-go-package: github.com/grafana/grafana/pkg/models
  SearchUserQueryResult:
    type: object
    properties:
      page:
        type: integer
        format: int64
        x-go-name: Page
      perPage:
        type: integer
        format: int64
        x-go-name: PerPage
      totalCount:
        type: integer
        format: int64
        x-go-name: TotalCount
      users:
        type: array
        items:
          $ref: '#/definitions/UserSearchHitDTO'
        x-go-name: Users
    x-go-package: github.com/grafana/grafana/pkg/models
  SetUserRolesCommand:
    type: object
    properties:
      global:
        type: boolean
        x-go-name: Global
      includeHidden:
        type: boolean
        x-go-name: IncludeHidden
      roleUids:
        type: array
        items:
          type: string
        x-go-name: RoleUIDs
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  SettingsBag:
    type: object
    additionalProperties:
      type: object
      additionalProperties:
        type: string
    x-go-package: github.com/grafana/grafana/pkg/setting
  SettingsDTO:
    type: object
    properties:
      branding:
        $ref: '#/definitions/BrandingOptionsDTO'
      id:
        type: integer
        format: int64
        x-go-name: ID
      orgId:
        type: integer
        format: int64
        x-go-name: OrgID
      userId:
        type: integer
        format: int64
        x-go-name: UserID
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  Status:
    type: object
    properties:
      enabled:
        type: boolean
        x-go-name: Enabled
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  SuccessResponseBody:
    type: object
    properties:
      message:
        type: string
        x-go-name: Message
    x-go-package: github.com/grafana/grafana/pkg/api/docs/definitions
  SyncResult:
    type: object
    title: SyncResult holds the result of a sync with LDAP. This gives us information on which users were updated and how.
    properties:
      Elapsed:
        $ref: '#/definitions/Duration'
      FailedUsers:
        type: array
        items:
          $ref: '#/definitions/FailedUser'
      MissingUserIds:
        type: array
        items:
          type: integer
          format: int64
      Started:
        type: string
        format: date-time
      UpdatedUserIds:
        type: array
        items:
          type: integer
          format: int64
    x-go-package: github.com/grafana/grafana/pkg/extensions/ldapsync
  TagsDTO:
    type: object
    title: TagsDTO is the frontend DTO for Tag.
    properties:
      count:
        type: integer
        format: int64
        x-go-name: Count
      tag:
        type: string
        x-go-name: Tag
    x-go-package: github.com/grafana/grafana/pkg/services/annotations
  TeamDTO:
    type: object
    properties:
      accessControl:
        type: object
        additionalProperties:
          type: boolean
        x-go-name: AccessControl
      avatarUrl:
        type: string
        x-go-name: AvatarUrl
      email:
        type: string
        x-go-name: Email
      id:
        type: integer
        format: int64
        x-go-name: Id
      memberCount:
        type: integer
        format: int64
        x-go-name: MemberCount
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      permission:
        $ref: '#/definitions/PermissionType'
    x-go-package: github.com/grafana/grafana/pkg/models
  TeamGroupDTO:
    type: object
    properties:
      groupId:
        type: string
        x-go-name: GroupId
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      teamId:
        type: integer
        format: int64
        x-go-name: TeamId
    x-go-package: github.com/grafana/grafana/pkg/extensions/teamgroupsync/models
  TeamGroupMapping:
    type: object
    properties:
      groupId:
        type: string
        x-go-name: GroupId
    x-go-package: github.com/grafana/grafana/pkg/extensions/teamgroupsync/models
  TeamMemberDTO:
    type: object
    properties:
      auth_module:
        type: string
        x-go-name: AuthModule
      avatarUrl:
        type: string
        x-go-name: AvatarUrl
      email:
        type: string
        x-go-name: Email
      labels:
        type: array
        items:
          type: string
        x-go-name: Labels
      login:
        type: string
        x-go-name: Login
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      permission:
        $ref: '#/definitions/PermissionType'
      teamId:
        type: integer
        format: int64
        x-go-name: TeamId
      userId:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/models
  TempUserDTO:
    type: object
    properties:
      code:
        type: string
        x-go-name: Code
      createdOn:
        type: string
        format: date-time
        x-go-name: Created
      email:
        type: string
        x-go-name: Email
      emailSent:
        type: boolean
        x-go-name: EmailSent
      emailSentOn:
        type: string
        format: date-time
        x-go-name: EmailSentOn
      id:
        type: integer
        format: int64
        x-go-name: Id
      invitedByEmail:
        type: string
        x-go-name: InvitedByEmail
      invitedByLogin:
        type: string
        x-go-name: InvitedByLogin
      invitedByName:
        type: string
        x-go-name: InvitedByName
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
      status:
        $ref: '#/definitions/TempUserStatus'
      url:
        type: string
        x-go-name: Url
    x-go-package: github.com/grafana/grafana/pkg/models
  TempUserStatus:
    type: string
    x-go-package: github.com/grafana/grafana/pkg/models
  TimeRangeDTO:
    type: object
    properties:
      from:
        type: string
        x-go-name: From
      to:
        type: string
        x-go-name: To
    x-go-package: github.com/grafana/grafana/pkg/extensions/report/api
  Token:
    type: object
    properties:
      account:
        type: string
        x-go-name: Account
      company:
        type: string
        x-go-name: Company
      details_url:
        type: string
        x-go-name: DetailsUrl
      exp:
        type: integer
        format: int64
        x-go-name: Expires
      iat:
        type: integer
        format: int64
        x-go-name: Issued
      included_admins:
        type: integer
        format: int64
        x-go-name: IncludedAdmins
      included_users:
        type: integer
        format: int64
        x-go-name: IncludedUsers
      included_viewers:
        type: integer
        format: int64
        x-go-name: IncludedViewers
      iss:
        type: string
        x-go-name: Issuer
      jti:
        type: string
        x-go-name: Id
      lexp:
        type: integer
        format: int64
        x-go-name: LicenseExpires
      lic_exp_warn_days:
        type: integer
        format: int64
        x-go-name: LicenseExpiresWarnDays
      lid:
        type: string
        x-go-name: LicenseId
      limit_by:
        type: string
        x-go-name: LimitBy
      max_concurrent_user_sessions:
        type: integer
        format: int64
        x-go-name: MaxConcurrentUserSessions
      nbf:
        type: integer
        format: int64
        x-go-name: LicenseIssued
      prod:
        type: array
        items:
          type: string
        x-go-name: Products
      slug:
        type: string
        x-go-name: Slug
      status:
        $ref: '#/definitions/TokenStatus'
      sub:
        type: string
        x-go-name: Subject
      tok_exp_warn_days:
        type: integer
        format: int64
        x-go-name: TokenExpiresWarnDays
      trial:
        type: boolean
        x-go-name: Trial
      trial_exp:
        type: integer
        format: int64
        x-go-name: TrialExpires
      update_days:
        type: integer
        format: int64
        x-go-name: UpdateDays
      usage_billing:
        type: boolean
        x-go-name: UsageBilling
    x-go-package: github.com/grafana/grafana/pkg/extensions/licensing
  TokenStatus:
    type: integer
    format: int64
    x-go-package: github.com/grafana/grafana/pkg/extensions/licensing
  TrimDashboardCommand:
    type: object
    properties:
      dashboard:
        $ref: '#/definitions/Json'
      meta:
        $ref: '#/definitions/Json'
    x-go-package: github.com/grafana/grafana/pkg/models
  TrimDashboardFullWithMeta:
    type: object
    properties:
      dashboard:
        $ref: '#/definitions/Json'
      meta:
        $ref: '#/definitions/Json'
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UpdateAlertNotificationCommand:
    type: object
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      frequency:
        type: string
        x-go-name: Frequency
      id:
        type: integer
        format: int64
        x-go-name: Id
      isDefault:
        type: boolean
        x-go-name: IsDefault
      name:
        type: string
        x-go-name: Name
      secureSettings:
        type: object
        additionalProperties:
          type: string
        x-go-name: SecureSettings
      sendReminder:
        type: boolean
        x-go-name: SendReminder
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: Uid
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateAlertNotificationWithUidCommand:
    type: object
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      frequency:
        type: string
        x-go-name: Frequency
      isDefault:
        type: boolean
        x-go-name: IsDefault
      name:
        type: string
        x-go-name: Name
      secureSettings:
        type: object
        additionalProperties:
          type: string
        x-go-name: SecureSettings
      sendReminder:
        type: boolean
        x-go-name: SendReminder
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: NewUid
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateAnnotationsCmd:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: Id
      tags:
        type: array
        items:
          type: string
        x-go-name: Tags
      text:
        type: string
        x-go-name: Text
      time:
        type: integer
        format: int64
        x-go-name: Time
      timeEnd:
        type: integer
        format: int64
        x-go-name: TimeEnd
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UpdateDashboardAclCommand:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/DashboardAclUpdateItem'
        x-go-name: Items
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UpdateDataSourceCommand:
    description: Also acts as api DTO
    type: object
    properties:
      access:
        $ref: '#/definitions/DsAccess'
      basicAuth:
        type: boolean
        x-go-name: BasicAuth
      basicAuthPassword:
        type: string
        x-go-name: BasicAuthPassword
      basicAuthUser:
        type: string
        x-go-name: BasicAuthUser
      database:
        type: string
        x-go-name: Database
      isDefault:
        type: boolean
        x-go-name: IsDefault
      jsonData:
        $ref: '#/definitions/Json'
      name:
        type: string
        x-go-name: Name
      password:
        type: string
        x-go-name: Password
      secureJsonData:
        type: object
        additionalProperties:
          type: string
        x-go-name: SecureJsonData
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: Uid
      url:
        type: string
        x-go-name: Url
      user:
        type: string
        x-go-name: User
      version:
        type: integer
        format: int64
        x-go-name: Version
      withCredentials:
        type: boolean
        x-go-name: WithCredentials
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateFolderCommand:
    type: object
    properties:
      overwrite:
        type: boolean
        x-go-name: Overwrite
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: Uid
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateOrgAddressForm:
    type: object
    properties:
      address1:
        type: string
        x-go-name: Address1
      address2:
        type: string
        x-go-name: Address2
      city:
        type: string
        x-go-name: City
      country:
        type: string
        x-go-name: Country
      state:
        type: string
        x-go-name: State
      zipcode:
        type: string
        x-go-name: ZipCode
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UpdateOrgForm:
    type: object
    properties:
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UpdateOrgQuotaCmd:
    type: object
    properties:
      limit:
        type: integer
        format: int64
        x-go-name: Limit
      target:
        type: string
        x-go-name: Target
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateOrgUserCommand:
    type: object
    properties:
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdatePrefsCmd:
    type: object
    properties:
      homeDashboardId:
        description: The numerical :id of a favorited dashboard
        type: integer
        format: int64
        default: 0
        x-go-name: HomeDashboardID
      homeDashboardUID:
        type: string
        x-go-name: HomeDashboardUID
      navbar:
        $ref: '#/definitions/NavbarPreference'
      queryHistory:
        $ref: '#/definitions/QueryHistoryPreference'
      theme:
        type: string
        enum:
          - light
          - dark
        x-go-name: Theme
      timezone:
        type: string
        enum:
          - utc
          - browser
        x-go-name: Timezone
      weekStart:
        type: string
        x-go-name: WeekStart
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UpdateRoleCommand:
    type: object
    properties:
      description:
        type: string
        x-go-name: Description
      displayName:
        type: string
        x-go-name: DisplayName
      global:
        type: boolean
        x-go-name: Global
      group:
        type: string
        x-go-name: Group
      hidden:
        type: boolean
        x-go-name: Hidden
      name:
        type: string
        x-go-name: Name
      permissions:
        type: array
        items:
          $ref: '#/definitions/Permission'
        x-go-name: Permissions
      version:
        type: integer
        format: int64
        x-go-name: Version
    x-go-package: github.com/grafana/grafana/pkg/extensions/accesscontrol
  UpdateTeamCommand:
    type: object
    properties:
      Email:
        type: string
      Id:
        type: integer
        format: int64
      Name:
        type: string
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateTeamMemberCommand:
    type: object
    properties:
      permission:
        $ref: '#/definitions/PermissionType'
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateUserCommand:
    type: object
    properties:
      email:
        type: string
        x-go-name: Email
      login:
        type: string
        x-go-name: Login
      name:
        type: string
        x-go-name: Name
      theme:
        type: string
        x-go-name: Theme
    x-go-package: github.com/grafana/grafana/pkg/models
  UpdateUserQuotaCmd:
    type: object
    properties:
      limit:
        type: integer
        format: int64
        x-go-name: Limit
      target:
        type: string
        x-go-name: Target
    x-go-package: github.com/grafana/grafana/pkg/models
  UserIdDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
        x-go-name: Id
      message:
        type: string
        x-go-name: Message
    x-go-package: github.com/grafana/grafana/pkg/models
  UserLookupDTO:
    type: object
    properties:
      avatarUrl:
        type: string
        x-go-name: AvatarURL
      login:
        type: string
        x-go-name: Login
      userId:
        type: integer
        format: int64
        x-go-name: UserID
    x-go-package: github.com/grafana/grafana/pkg/api/dtos
  UserOrgDTO:
    type: object
    properties:
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      role:
        type: string
        enum:
          - Viewer
          - Editor
          - Admin
        x-go-enum-desc: |-
          Viewer ROLE_VIEWER
          Editor ROLE_EDITOR
          Admin ROLE_ADMIN
        x-go-name: Role
    x-go-package: github.com/grafana/grafana/pkg/models
  UserProfileDTO:
    type: object
    properties:
      accessControl:
        type: object
        additionalProperties:
          type: boolean
        x-go-name: AccessControl
      authLabels:
        type: array
        items:
          type: string
        x-go-name: AuthLabels
      avatarUrl:
        type: string
        x-go-name: AvatarUrl
      createdAt:
        type: string
        format: date-time
        x-go-name: CreatedAt
      email:
        type: string
        x-go-name: Email
      id:
        type: integer
        format: int64
        x-go-name: Id
      isDisabled:
        type: boolean
        x-go-name: IsDisabled
      isExternal:
        type: boolean
        x-go-name: IsExternal
      isGrafanaAdmin:
        type: boolean
        x-go-name: IsGrafanaAdmin
      login:
        type: string
        x-go-name: Login
      name:
        type: string
        x-go-name: Name
      orgId:
        type: integer
        format: int64
        x-go-name: OrgId
      theme:
        type: string
        x-go-name: Theme
      updatedAt:
        type: string
        format: date-time
        x-go-name: UpdatedAt
    x-go-package: github.com/grafana/grafana/pkg/models
  UserQuotaDTO:
    type: object
    properties:
      limit:
        type: integer
        format: int64
        x-go-name: Limit
      target:
        type: string
        x-go-name: Target
      used:
        type: integer
        format: int64
        x-go-name: Used
      user_id:
        type: integer
        format: int64
        x-go-name: UserId
    x-go-package: github.com/grafana/grafana/pkg/models
  UserSearchHitDTO:
    type: object
    properties:
      authLabels:
        type: array
        items:
          type: string
        x-go-name: AuthLabels
      avatarUrl:
        type: string
        x-go-name: AvatarUrl
      email:
        type: string
        x-go-name: Email
      id:
        type: integer
        format: int64
        x-go-name: Id
      isAdmin:
        type: boolean
        x-go-name: IsAdmin
      isDisabled:
        type: boolean
        x-go-name: IsDisabled
      lastSeenAt:
        type: string
        format: date-time
        x-go-name: LastSeenAt
      lastSeenAtAge:
        type: string
        x-go-name: LastSeenAtAge
      login:
        type: string
        x-go-name: Login
      name:
        type: string
        x-go-name: Name
    x-go-package: github.com/grafana/grafana/pkg/models
  UserToken:
    description: UserToken represents a user token
    type: object
    properties:
      AuthToken:
        type: string
      AuthTokenSeen:
        type: boolean
      ClientIp:
        type: string
      CreatedAt:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      PrevAuthToken:
        type: string
      RevokedAt:
        type: integer
        format: int64
      RotatedAt:
        type: integer
        format: int64
      SeenAt:
        type: integer
        format: int64
      UnhashedToken:
        type: string
      UpdatedAt:
        type: integer
        format: int64
      UserAgent:
        type: string
      UserId:
        type: integer
        format: int64
    x-go-package: github.com/grafana/grafana/pkg/models
  Ack:
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  AlertDiscovery:
    properties:
      alerts:
        items:
          $ref: '#/definitions/Alert'
        type: array
        x-go-name: Alerts
    required:
      - alerts
    title: AlertDiscovery has info for all active alerts.
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  AlertInstancesResponse:
    properties:
      instances:
        description: >-
          Instances is an array of arrow encoded dataframes

          each frame has a single row, and a column for each instance (alert
          identified by unique labels) with a boolean value (firing/not firing)
        items:
          items:
            format: uint8
            type: integer
          type: array
        type: array
        x-go-name: Instances
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  AlertManager:
    properties:
      url:
        type: string
        x-go-name: URL
    title: AlertManager models a configured Alert Manager.
    type: object
    x-go-package: github.com/prometheus/client_golang/api/prometheus/v1
  AlertManagerNotFound:
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  AlertManagerNotReady:
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  AlertManagersResult:
    properties:
      activeAlertManagers:
        items:
          $ref: '#/definitions/AlertManager'
        type: array
        x-go-name: Active
      droppedAlertManagers:
        items:
          $ref: '#/definitions/AlertManager'
        type: array
        x-go-name: Dropped
    title: >-
      AlertManagersResult contains the result from querying the alertmanagers
      endpoint.
    type: object
    x-go-package: github.com/prometheus/client_golang/api/prometheus/v1
  AlertQuery:
    properties:
      datasourceUid:
        description: >-
          Grafana data source unique identifier; it should be '-100' for a
          Server Side Expression operation.
        type: string
        x-go-name: DatasourceUID
      model:
        description: >-
          JSON is the raw JSON query and includes the above properties as well
          as custom properties.
        type: object
        x-go-name: Model
      queryType:
        description: |-
          QueryType is an optional identifier for the type of query.
          It can be used to distinguish different types of queries.
        type: string
        x-go-name: QueryType
      refId:
        description: RefID is the unique identifier of the query, set by the frontend call.
        type: string
        x-go-name: RefID
      relativeTimeRange:
        $ref: '#/definitions/RelativeTimeRange'
    title: AlertQuery represents a single query associated with an alert definition.
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/models
  AlertResponse:
    properties:
      data:
        $ref: '#/definitions/AlertDiscovery'
      error:
        type: string
        x-go-name: Error
      errorType:
        $ref: '#/definitions/ErrorType'
      status:
        type: string
        x-go-name: Status
    required:
      - status
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  AlertingRule:
    description: adapted from cortex
    properties:
      alerts:
        items:
          $ref: '#/definitions/Alert'
        type: array
        x-go-name: Alerts
      annotations:
        $ref: '#/definitions/overrideLabels'
      duration:
        format: double
        type: number
        x-go-name: Duration
      evaluationTime:
        format: double
        type: number
        x-go-name: EvaluationTime
      health:
        type: string
        x-go-name: Health
      labels:
        $ref: '#/definitions/overrideLabels'
      lastError:
        type: string
        x-go-name: LastError
      lastEvaluation:
        format: date-time
        type: string
        x-go-name: LastEvaluation
      name:
        type: string
        x-go-name: Name
      query:
        type: string
        x-go-name: Query
      state:
        description: State can be "pending", "firing", "inactive".
        type: string
        x-go-name: State
      type:
        $ref: '#/definitions/RuleType'
    required:
      - name
      - query
      - health
      - type
      - state
      - annotations
      - alerts
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  ApiRuleNode:
    properties:
      alert:
        type: string
        x-go-name: Alert
      annotations:
        additionalProperties:
          type: string
        type: object
        x-go-name: Annotations
      expr:
        type: string
        x-go-name: Expr
      for:
        $ref: '#/definitions/Duration'
      labels:
        additionalProperties:
          type: string
        type: object
        x-go-name: Labels
      record:
        type: string
        x-go-name: Record
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Authorization:
    properties:
      credentials:
        $ref: '#/definitions/Secret'
      credentials_file:
        type: string
        x-go-name: CredentialsFile
      type:
        type: string
        x-go-name: Type
    title: Authorization contains HTTP authorization credentials.
    type: object
    x-go-package: github.com/prometheus/common/config
  BasicAuth:
    properties:
      password:
        $ref: '#/definitions/Secret'
      password_file:
        type: string
        x-go-name: PasswordFile
      username:
        type: string
        x-go-name: Username
    title: BasicAuth contains basic HTTP authentication credentials.
    type: object
    x-go-package: github.com/prometheus/common/config
  Config:
    properties:
      global:
        $ref: '#/definitions/GlobalConfig'
      inhibit_rules:
        items:
          $ref: '#/definitions/InhibitRule'
        type: array
        x-go-name: InhibitRules
      mute_time_intervals:
        items:
          $ref: '#/definitions/MuteTimeInterval'
        type: array
        x-go-name: MuteTimeIntervals
      route:
        $ref: '#/definitions/Route'
      templates:
        items:
          type: string
        type: array
        x-go-name: Templates
    title: Config is the top-level configuration for Alertmanager's config files.
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  DateTime:
    description: |-
      DateTime is a time but it serializes to ISO8601 format with millis
      It knows how to read 3 different variations of a RFC3339 date time.
      Most APIs we encounter want either millisecond or second precision times.
      This just tries to make it worry-free.
    format: date-time
    type: string
    x-go-package: github.com/go-openapi/strfmt
  DayOfMonthRange:
    properties:
      Begin:
        format: int64
        type: integer
      End:
        format: int64
        type: integer
    title: >-
      A DayOfMonthRange is an inclusive range that may have negative
      Beginning/End values that represent distance from the End of the month
      Beginning at -1.
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  DiscoveryBase:
    properties:
      error:
        type: string
        x-go-name: Error
      errorType:
        $ref: '#/definitions/ErrorType'
      status:
        type: string
        x-go-name: Status
    required:
      - status
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  EmailConfig:
    properties:
      auth_identity:
        type: string
        x-go-name: AuthIdentity
      auth_password:
        $ref: '#/definitions/Secret'
      auth_secret:
        $ref: '#/definitions/Secret'
      auth_username:
        type: string
        x-go-name: AuthUsername
      from:
        type: string
        x-go-name: From
      headers:
        additionalProperties:
          type: string
        type: object
        x-go-name: Headers
      hello:
        type: string
        x-go-name: Hello
      html:
        type: string
        x-go-name: HTML
      require_tls:
        type: boolean
        x-go-name: RequireTLS
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      smarthost:
        $ref: '#/definitions/HostPort'
      text:
        type: string
        x-go-name: Text
      tls_config:
        $ref: '#/definitions/TLSConfig'
      to:
        description: Email address to notify.
        type: string
        x-go-name: To
    title: EmailConfig configures notifications via mail.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  EmbeddedContactPoint:
    description: |-
      EmbeddedContactPoint is the contact point type that is used
      by grafanas embedded alertmanager implementation.
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      name:
        description: |-
          Name is used as grouping key in the UI. Contact points with the
          same name will be grouped in the UI.
        type: string
        x-go-name: Name
      provenance:
        type: string
        x-go-name: Provenance
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        description: |-
          UID is the unique identifier of the contact point. This will be
          automatically set be the Grafana.
        type: string
        x-go-name: UID
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  ErrorType:
    title: ErrorType models the different API error types.
    type: string
    x-go-package: github.com/prometheus/client_golang/api/prometheus/v1
  EvalAlertConditionCommand:
    description: EvalAlertConditionCommand is the command for evaluating a condition
    properties:
      condition:
        type: string
        x-go-name: Condition
      data:
        items:
          $ref: '#/definitions/AlertQuery'
        type: array
        x-go-name: Data
      now:
        format: date-time
        type: string
        x-go-name: Now
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/models
  EvalQueriesPayload:
    properties:
      data:
        items:
          $ref: '#/definitions/AlertQuery'
        type: array
        x-go-name: Data
      now:
        format: date-time
        type: string
        x-go-name: Now
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  EvalQueriesResponse: {}
  ExtendedReceiver:
    properties:
      email_configs:
        $ref: '#/definitions/EmailConfig'
      grafana_managed_receiver:
        $ref: '#/definitions/PostableGrafanaReceiver'
      opsgenie_configs:
        $ref: '#/definitions/OpsGenieConfig'
      pagerduty_configs:
        $ref: '#/definitions/PagerdutyConfig'
      pushover_configs:
        $ref: '#/definitions/PushoverConfig'
      slack_configs:
        $ref: '#/definitions/SlackConfig'
      victorops_configs:
        $ref: '#/definitions/VictorOpsConfig'
      webhook_configs:
        $ref: '#/definitions/WebhookConfig'
      wechat_configs:
        $ref: '#/definitions/WechatConfig'
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Failure:
    $ref: '#/definitions/ResponseDetails'
  GettableAlertmanagers:
    properties:
      data:
        $ref: '#/definitions/AlertManagersResult'
      status:
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableApiAlertingConfig:
    properties:
      global:
        $ref: '#/definitions/GlobalConfig'
      inhibit_rules:
        items:
          $ref: '#/definitions/InhibitRule'
        type: array
        x-go-name: InhibitRules
      mute_time_intervals:
        items:
          $ref: '#/definitions/MuteTimeInterval'
        type: array
        x-go-name: MuteTimeIntervals
      receivers:
        description: Override with our superset receiver type
        items:
          $ref: '#/definitions/GettableApiReceiver'
        type: array
        x-go-name: Receivers
      route:
        $ref: '#/definitions/Route'
      templates:
        items:
          type: string
        type: array
        x-go-name: Templates
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableApiReceiver:
    properties:
      email_configs:
        items:
          $ref: '#/definitions/EmailConfig'
        type: array
        x-go-name: EmailConfigs
      grafana_managed_receiver_configs:
        items:
          $ref: '#/definitions/GettableGrafanaReceiver'
        type: array
        x-go-name: GrafanaManagedReceivers
      name:
        description: A unique identifier for this receiver.
        type: string
        x-go-name: Name
      opsgenie_configs:
        items:
          $ref: '#/definitions/OpsGenieConfig'
        type: array
        x-go-name: OpsGenieConfigs
      pagerduty_configs:
        items:
          $ref: '#/definitions/PagerdutyConfig'
        type: array
        x-go-name: PagerdutyConfigs
      pushover_configs:
        items:
          $ref: '#/definitions/PushoverConfig'
        type: array
        x-go-name: PushoverConfigs
      slack_configs:
        items:
          $ref: '#/definitions/SlackConfig'
        type: array
        x-go-name: SlackConfigs
      sns_configs:
        items:
          $ref: '#/definitions/SNSConfig'
        type: array
        x-go-name: SNSConfigs
      victorops_configs:
        items:
          $ref: '#/definitions/VictorOpsConfig'
        type: array
        x-go-name: VictorOpsConfigs
      webhook_configs:
        items:
          $ref: '#/definitions/WebhookConfig'
        type: array
        x-go-name: WebhookConfigs
      wechat_configs:
        items:
          $ref: '#/definitions/WechatConfig'
        type: array
        x-go-name: WechatConfigs
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableExtendedRuleNode:
    properties:
      alert:
        type: string
        x-go-name: Alert
      annotations:
        additionalProperties:
          type: string
        type: object
        x-go-name: Annotations
      expr:
        type: string
        x-go-name: Expr
      for:
        $ref: '#/definitions/Duration'
      grafana_alert:
        $ref: '#/definitions/GettableGrafanaRule'
      labels:
        additionalProperties:
          type: string
        type: object
        x-go-name: Labels
      record:
        type: string
        x-go-name: Record
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableGrafanaReceiver:
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      name:
        type: string
        x-go-name: Name
      provenance:
        $ref: '#/definitions/Provenance'
      secureFields:
        additionalProperties:
          type: boolean
        type: object
        x-go-name: SecureFields
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: UID
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableGrafanaReceivers:
    properties:
      grafana_managed_receiver_configs:
        items:
          $ref: '#/definitions/GettableGrafanaReceiver'
        type: array
        x-go-name: GrafanaManagedReceivers
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableGrafanaRule:
    properties:
      condition:
        type: string
        x-go-name: Condition
      data:
        items:
          $ref: '#/definitions/AlertQuery'
        type: array
        x-go-name: Data
      exec_err_state:
        enum:
          - OK
          - Alerting
          - Error
        type: string
        x-go-enum-desc: |-
          OK OkErrState
          Alerting AlertingErrState
          Error ErrorErrState
        x-go-name: ExecErrState
      id:
        format: int64
        type: integer
        x-go-name: ID
      intervalSeconds:
        format: int64
        type: integer
        x-go-name: IntervalSeconds
      namespace_id:
        format: int64
        type: integer
        x-go-name: NamespaceID
      namespace_uid:
        type: string
        x-go-name: NamespaceUID
      no_data_state:
        enum:
          - Alerting
          - NoData
          - OK
        type: string
        x-go-enum-desc: |-
          Alerting Alerting
          NoData NoData
          OK OK
        x-go-name: NoDataState
      orgId:
        format: int64
        type: integer
        x-go-name: OrgID
      provenance:
        $ref: '#/definitions/Provenance'
      rule_group:
        type: string
        x-go-name: RuleGroup
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: UID
      updated:
        format: date-time
        type: string
        x-go-name: Updated
      version:
        format: int64
        type: integer
        x-go-name: Version
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableNGalertConfig:
    properties:
      alertmanagers:
        items:
          type: string
        type: array
        x-go-name: Alertmanagers
      alertmanagersChoice:
        enum:
          - all
          - internal
          - external
        type: string
        x-go-enum-desc: |-
          all AllAlertmanagers
          internal InternalAlertmanager
          external ExternalAlertmanagers
        x-go-name: AlertmanagersChoice
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableRuleGroupConfig:
    properties:
      interval:
        $ref: '#/definitions/Duration'
      name:
        type: string
        x-go-name: Name
      rules:
        items:
          $ref: '#/definitions/GettableExtendedRuleNode'
        type: array
        x-go-name: Rules
      source_tenants:
        items:
          type: string
        type: array
        x-go-name: SourceTenants
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableStatus:
    properties:
      cluster:
        $ref: '#/definitions/clusterStatus'
      config:
        $ref: '#/definitions/PostableApiAlertingConfig'
      uptime:
        description: uptime
        format: date-time
        type: string
        x-go-name: Uptime
      versionInfo:
        $ref: '#/definitions/versionInfo'
    required:
      - cluster
      - config
      - uptime
      - versionInfo
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GettableUserConfig:
    properties:
      alertmanager_config:
        $ref: '#/definitions/GettableApiAlertingConfig'
      template_files:
        additionalProperties:
          type: string
        type: object
        x-go-name: TemplateFiles
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  GlobalConfig:
    description: |-
      GlobalConfig defines configuration parameters that are valid globally
      unless overwritten.
    properties:
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      opsgenie_api_key:
        $ref: '#/definitions/Secret'
      opsgenie_api_key_file:
        type: string
        x-go-name: OpsGenieAPIKeyFile
      opsgenie_api_url:
        $ref: '#/definitions/URL'
      pagerduty_url:
        $ref: '#/definitions/URL'
      resolve_timeout:
        $ref: '#/definitions/Duration'
      slack_api_url:
        $ref: '#/definitions/SecretURL'
      slack_api_url_file:
        type: string
        x-go-name: SlackAPIURLFile
      smtp_auth_identity:
        type: string
        x-go-name: SMTPAuthIdentity
      smtp_auth_password:
        $ref: '#/definitions/Secret'
      smtp_auth_secret:
        $ref: '#/definitions/Secret'
      smtp_auth_username:
        type: string
        x-go-name: SMTPAuthUsername
      smtp_from:
        type: string
        x-go-name: SMTPFrom
      smtp_hello:
        type: string
        x-go-name: SMTPHello
      smtp_require_tls:
        type: boolean
        x-go-name: SMTPRequireTLS
      smtp_smarthost:
        $ref: '#/definitions/HostPort'
      victorops_api_key:
        $ref: '#/definitions/Secret'
      victorops_api_url:
        $ref: '#/definitions/URL'
      wechat_api_corp_id:
        type: string
        x-go-name: WeChatAPICorpID
      wechat_api_secret:
        $ref: '#/definitions/Secret'
      wechat_api_url:
        $ref: '#/definitions/URL'
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  HTTPClientConfig:
    properties:
      authorization:
        $ref: '#/definitions/Authorization'
      basic_auth:
        $ref: '#/definitions/BasicAuth'
      bearer_token:
        $ref: '#/definitions/Secret'
      bearer_token_file:
        description: |-
          The bearer token file for the targets. Deprecated in favour of
          Authorization.CredentialsFile.
        type: string
        x-go-name: BearerTokenFile
      follow_redirects:
        description: >-
          FollowRedirects specifies whether the client should follow HTTP 3xx
          redirects.

          The omitempty flag is not set, because it would be hidden from the

          marshalled configuration when set to false.
        type: boolean
        x-go-name: FollowRedirects
      oauth2:
        $ref: '#/definitions/OAuth2'
      proxy_url:
        $ref: '#/definitions/URL'
      tls_config:
        $ref: '#/definitions/TLSConfig'
    title: HTTPClientConfig configures an HTTP client.
    type: object
    x-go-package: github.com/prometheus/common/config
  HostPort:
    properties:
      Host:
        type: string
      Port:
        type: string
    title: HostPort represents a "host:port" network address.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  InclusiveRange:
    properties:
      Begin:
        format: int64
        type: integer
      End:
        format: int64
        type: integer
    title: >-
      InclusiveRange is used to hold the Beginning and End values of many time
      interval components.
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  InhibitRule:
    description: |-
      InhibitRule defines an inhibition rule that mutes alerts that match the
      target labels if an alert matching the source labels exists.
      Both alerts have to have a set of labels being equal.
    properties:
      equal:
        $ref: '#/definitions/LabelNames'
      source_match:
        additionalProperties:
          type: string
        description: |-
          SourceMatch defines a set of labels that have to equal the given
          value for source alerts. Deprecated. Remove before v1.0 release.
        type: object
        x-go-name: SourceMatch
      source_match_re:
        $ref: '#/definitions/MatchRegexps'
      source_matchers:
        $ref: '#/definitions/Matchers'
      target_match:
        additionalProperties:
          type: string
        description: |-
          TargetMatch defines a set of labels that have to equal the given
          value for target alerts. Deprecated. Remove before v1.0 release.
        type: object
        x-go-name: TargetMatch
      target_match_re:
        $ref: '#/definitions/MatchRegexps'
      target_matchers:
        $ref: '#/definitions/Matchers'
    type: object
    x-go-package: github.com/prometheus/alertmanager/config

  Label:
    properties:
      Name:
        type: string
        x-go-name: Value
    title: Label is a key/value pair of strings.
    type: object
    x-go-package: github.com/prometheus/prometheus/pkg/labels
  LabelName:
    description: |-
      A LabelName is a key for a LabelSet or Metric.  It has a value associated
      therewith.
    type: string
    x-go-package: github.com/prometheus/common/model
  LabelNames:
    items:
      $ref: '#/definitions/LabelName'
    title: LabelNames is a sortable LabelName slice. In implements sort.Interface.
    type: array
    x-go-package: github.com/prometheus/common/model
  LabelSet:
    additionalProperties:
      $ref: '#/definitions/LabelValue'
    description: >-
      A LabelSet is a collection of LabelName and LabelValue pairs.  The
      LabelSet

      may be fully-qualified down to the point where it may resolve to a single

      Metric in the data store or not.  All operations that occur within the
      realm

      of a LabelSet can emit a vector of Metric entities to which the LabelSet
      may

      match.
    type: object
    x-go-package: github.com/prometheus/common/model
  LabelValue:
    title: A LabelValue is an associated value for a LabelName.
    type: string
    x-go-package: github.com/prometheus/common/model
  Labels:
    description: |-
      Labels is a sorted set of labels. Order has to be guaranteed upon
      instantiation.
    items:
      $ref: '#/definitions/Label'
    type: array
    x-go-package: github.com/prometheus/prometheus/pkg/labels
  MatchRegexps:
    additionalProperties:
      $ref: '#/definitions/Regexp'
    title: MatchRegexps represents a map of Regexp.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  MatchType:
    format: int64
    title: MatchType is an enum for label matching types.
    type: integer
    x-go-package: github.com/prometheus/alertmanager/pkg/labels
  Matcher:
    properties:
      Name:
        type: string
      Type:
        $ref: '#/definitions/MatchType'
      Value:
        type: string
    title: Matcher models the matching of a label.
    type: object
    x-go-package: github.com/prometheus/alertmanager/pkg/labels
  Matchers:
    description: |-
      Matchers is a slice of Matchers that is sortable, implements Stringer, and
      provides a Matches method to match a LabelSet against all Matchers in the
      slice. Note that some users of Matchers might require it to be sorted.
    items:
      $ref: '#/definitions/Matcher'
    type: array
  MessageTemplateContent:
    properties:
      Template:
        type: string
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  MonthRange:
    properties:
      Begin:
        format: int64
        type: integer
      End:
        format: int64
        type: integer
    title: A MonthRange is an inclusive range between [1, 12] where 1 = January.
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  MultiStatus:
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  MuteTimeInterval:
    properties:
      name:
        type: string
        x-go-name: Name
      time_intervals:
        items:
          $ref: '#/definitions/TimeInterval'
        type: array
        x-go-name: TimeIntervals
    title: >-
      MuteTimeInterval represents a named set of time intervals for which a
      route should be muted.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  NamespaceConfigResponse:
    additionalProperties:
      items:
        $ref: '#/definitions/GettableRuleGroupConfig'
      type: array
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  NotifierConfig:
    properties:
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
    title: >-
      NotifierConfig contains base options common across all notifier
      configurations.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  OAuth2:
    properties:
      TLSConfig:
        $ref: '#/definitions/TLSConfig'
      client_id:
        type: string
        x-go-name: ClientID
      client_secret:
        $ref: '#/definitions/Secret'
      client_secret_file:
        type: string
        x-go-name: ClientSecretFile
      endpoint_params:
        additionalProperties:
          type: string
        type: object
        x-go-name: EndpointParams
      scopes:
        items:
          type: string
        type: array
        x-go-name: Scopes
      token_url:
        type: string
        x-go-name: TokenURL
    title: OAuth2 is the oauth2 client configuration.
    type: object
    x-go-package: github.com/prometheus/common/config
  ObjectMatchers:
    $ref: '#/definitions/Matchers'
    description: >-
      ObjectMatchers is Matchers with a different Unmarshal and Marshal methods
      that accept matchers as objects

      that have already been parsed.
  OpsGenieConfig:
    properties:
      actions:
        type: string
        x-go-name: Actions
      api_key:
        $ref: '#/definitions/Secret'
      api_key_file:
        type: string
        x-go-name: APIKeyFile
      api_url:
        $ref: '#/definitions/URL'
      description:
        type: string
        x-go-name: Description
      details:
        additionalProperties:
          type: string
        type: object
        x-go-name: Details
      entity:
        type: string
        x-go-name: Entity
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      message:
        type: string
        x-go-name: Message
      note:
        type: string
        x-go-name: Note
      priority:
        type: string
        x-go-name: Priority
      responders:
        items:
          $ref: '#/definitions/OpsGenieConfigResponder'
        type: array
        x-go-name: Responders
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      source:
        type: string
        x-go-name: Source
      tags:
        type: string
        x-go-name: Tags
      update_alerts:
        type: boolean
        x-go-name: UpdateAlerts
    title: OpsGenieConfig configures notifications via OpsGenie.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  OpsGenieConfigResponder:
    properties:
      id:
        description: One of those 3 should be filled.
        type: string
        x-go-name: ID
      name:
        type: string
        x-go-name: Name
      type:
        description: team, user, escalation, schedule etc.
        type: string
        x-go-name: Type
      username:
        type: string
        x-go-name: Username
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  PagerdutyConfig:
    properties:
      class:
        type: string
        x-go-name: Class
      client:
        type: string
        x-go-name: Client
      client_url:
        type: string
        x-go-name: ClientURL
      component:
        type: string
        x-go-name: Component
      description:
        type: string
        x-go-name: Description
      details:
        additionalProperties:
          type: string
        type: object
        x-go-name: Details
      group:
        type: string
        x-go-name: Group
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      images:
        items:
          $ref: '#/definitions/PagerdutyImage'
        type: array
        x-go-name: Images
      links:
        items:
          $ref: '#/definitions/PagerdutyLink'
        type: array
        x-go-name: Links
      routing_key:
        $ref: '#/definitions/Secret'
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      service_key:
        $ref: '#/definitions/Secret'
      severity:
        type: string
        x-go-name: Severity
      url:
        $ref: '#/definitions/URL'
    title: PagerdutyConfig configures notifications via PagerDuty.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  PagerdutyImage:
    description: PagerdutyImage is an image
    properties:
      alt:
        type: string
        x-go-name: Alt
      href:
        type: string
        x-go-name: Href
      src:
        type: string
        x-go-name: Src
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  PagerdutyLink:
    description: PagerdutyLink is a link
    properties:
      href:
        type: string
        x-go-name: Href
      text:
        type: string
        x-go-name: Text
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  PermissionDenied:
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Point:
    properties:
      T:
        format: int64
        type: integer
      V:
        format: double
        type: number
    title: Point represents a single data point for a given timestamp.
    type: object
    x-go-package: github.com/prometheus/prometheus/promql
  PostableApiAlertingConfig:
    properties:
      global:
        $ref: '#/definitions/GlobalConfig'
      inhibit_rules:
        items:
          $ref: '#/definitions/InhibitRule'
        type: array
        x-go-name: InhibitRules
      mute_time_intervals:
        items:
          $ref: '#/definitions/MuteTimeInterval'
        type: array
        x-go-name: MuteTimeIntervals
      receivers:
        description: Override with our superset receiver type
        items:
          $ref: '#/definitions/PostableApiReceiver'
        type: array
        x-go-name: Receivers
      route:
        $ref: '#/definitions/Route'
      templates:
        items:
          type: string
        type: array
        x-go-name: Templates
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableApiReceiver:
    properties:
      email_configs:
        items:
          $ref: '#/definitions/EmailConfig'
        type: array
        x-go-name: EmailConfigs
      grafana_managed_receiver_configs:
        items:
          $ref: '#/definitions/PostableGrafanaReceiver'
        type: array
        x-go-name: GrafanaManagedReceivers
      name:
        description: A unique identifier for this receiver.
        type: string
        x-go-name: Name
      opsgenie_configs:
        items:
          $ref: '#/definitions/OpsGenieConfig'
        type: array
        x-go-name: OpsGenieConfigs
      pagerduty_configs:
        items:
          $ref: '#/definitions/PagerdutyConfig'
        type: array
        x-go-name: PagerdutyConfigs
      pushover_configs:
        items:
          $ref: '#/definitions/PushoverConfig'
        type: array
        x-go-name: PushoverConfigs
      slack_configs:
        items:
          $ref: '#/definitions/SlackConfig'
        type: array
        x-go-name: SlackConfigs
      sns_configs:
        items:
          $ref: '#/definitions/SNSConfig'
        type: array
        x-go-name: SNSConfigs
      victorops_configs:
        items:
          $ref: '#/definitions/VictorOpsConfig'
        type: array
        x-go-name: VictorOpsConfigs
      webhook_configs:
        items:
          $ref: '#/definitions/WebhookConfig'
        type: array
        x-go-name: WebhookConfigs
      wechat_configs:
        items:
          $ref: '#/definitions/WechatConfig'
        type: array
        x-go-name: WechatConfigs
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableExtendedRuleNode:
    properties:
      alert:
        type: string
        x-go-name: Alert
      annotations:
        additionalProperties:
          type: string
        type: object
        x-go-name: Annotations
      expr:
        type: string
        x-go-name: Expr
      for:
        $ref: '#/definitions/Duration'
      grafana_alert:
        $ref: '#/definitions/PostableGrafanaRule'
      labels:
        additionalProperties:
          type: string
        type: object
        x-go-name: Labels
      record:
        type: string
        x-go-name: Record
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableGrafanaReceiver:
    properties:
      disableResolveMessage:
        type: boolean
        x-go-name: DisableResolveMessage
      name:
        type: string
        x-go-name: Name
      secureSettings:
        additionalProperties:
          type: string
        type: object
        x-go-name: SecureSettings
      settings:
        $ref: '#/definitions/Json'
      type:
        type: string
        x-go-name: Type
      uid:
        type: string
        x-go-name: UID
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableGrafanaReceivers:
    properties:
      grafana_managed_receiver_configs:
        items:
          $ref: '#/definitions/PostableGrafanaReceiver'
        type: array
        x-go-name: GrafanaManagedReceivers
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableGrafanaRule:
    properties:
      condition:
        type: string
        x-go-name: Condition
      data:
        items:
          $ref: '#/definitions/AlertQuery'
        type: array
        x-go-name: Data
      exec_err_state:
        enum:
          - OK
          - Alerting
          - Error
        type: string
        x-go-enum-desc: |-
          OK OkErrState
          Alerting AlertingErrState
          Error ErrorErrState
        x-go-name: ExecErrState
      no_data_state:
        enum:
          - Alerting
          - NoData
          - OK
        type: string
        x-go-enum-desc: |-
          Alerting Alerting
          NoData NoData
          OK OK
        x-go-name: NoDataState
      title:
        type: string
        x-go-name: Title
      uid:
        type: string
        x-go-name: UID
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableNGalertConfig:
    properties:
      alertmanagers:
        items:
          type: string
        type: array
        x-go-name: Alertmanagers
      alertmanagersChoice:
        enum:
          - all
          - internal
          - external
        type: string
        x-go-enum-desc: |-
          all AllAlertmanagers
          internal InternalAlertmanager
          external ExternalAlertmanagers
        x-go-name: AlertmanagersChoice
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableRuleGroupConfig:
    properties:
      interval:
        $ref: '#/definitions/Duration'
      name:
        type: string
        x-go-name: Name
      rules:
        items:
          $ref: '#/definitions/PostableExtendedRuleNode'
        type: array
        x-go-name: Rules
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  PostableUserConfig:
    properties:
      alertmanager_config:
        $ref: '#/definitions/PostableApiAlertingConfig'
      template_files:
        additionalProperties:
          type: string
        type: object
        x-go-name: TemplateFiles
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Provenance:
    type: string
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/models
  PushoverConfig:
    properties:
      expire:
        $ref: '#/definitions/Duration'
      html:
        type: boolean
        x-go-name: HTML
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      message:
        type: string
        x-go-name: Message
      priority:
        type: string
        x-go-name: Priority
      retry:
        $ref: '#/definitions/Duration'
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      sound:
        type: string
        x-go-name: Sound
      title:
        type: string
        x-go-name: Title
      token:
        $ref: '#/definitions/Secret'
      url:
        type: string
        x-go-name: URL
      url_title:
        type: string
        x-go-name: URLTitle
      user_key:
        $ref: '#/definitions/Secret'
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  Receiver:
    properties:
      email_configs:
        items:
          $ref: '#/definitions/EmailConfig'
        type: array
        x-go-name: EmailConfigs
      name:
        description: A unique identifier for this receiver.
        type: string
        x-go-name: Name
      opsgenie_configs:
        items:
          $ref: '#/definitions/OpsGenieConfig'
        type: array
        x-go-name: OpsGenieConfigs
      pagerduty_configs:
        items:
          $ref: '#/definitions/PagerdutyConfig'
        type: array
        x-go-name: PagerdutyConfigs
      pushover_configs:
        items:
          $ref: '#/definitions/PushoverConfig'
        type: array
        x-go-name: PushoverConfigs
      slack_configs:
        items:
          $ref: '#/definitions/SlackConfig'
        type: array
        x-go-name: SlackConfigs
      sns_configs:
        items:
          $ref: '#/definitions/SNSConfig'
        type: array
        x-go-name: SNSConfigs
      victorops_configs:
        items:
          $ref: '#/definitions/VictorOpsConfig'
        type: array
        x-go-name: VictorOpsConfigs
      webhook_configs:
        items:
          $ref: '#/definitions/WebhookConfig'
        type: array
        x-go-name: WebhookConfigs
      wechat_configs:
        items:
          $ref: '#/definitions/WechatConfig'
        type: array
        x-go-name: WechatConfigs
    title: >-
      Receiver configuration provides configuration on how to contact a
      receiver.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  Regexp:
    description: |-
      A Regexp is safe for concurrent use by multiple goroutines,
      except for configuration methods, such as Longest.
    title: Regexp is the representation of a compiled regular expression.
    type: object
    x-go-package: regexp
  RelativeTimeRange:
    description: |-
      RelativeTimeRange is the per query start and end time
      for requests.
    properties:
      from:
        type: integer
        format: int64
      to:
        type: integer
        format: int64
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/models
  ResponseDetails:
    properties:
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Route:
    description: >-
      A Route is a node that contains definitions of how to handle alerts. This
      is modified

      from the upstream alertmanager in that it adds the ObjectMatchers
      property.
    properties:
      continue:
        type: boolean
        x-go-name: Continue
      group_by:
        items:
          type: string
        type: array
        x-go-name: GroupByStr
      group_interval:
        $ref: '#/definitions/Duration'
      group_wait:
        $ref: '#/definitions/Duration'
      match:
        additionalProperties:
          type: string
        description: Deprecated. Remove before v1.0 release.
        type: object
        x-go-name: Match
      match_re:
        $ref: '#/definitions/MatchRegexps'
      matchers:
        $ref: '#/definitions/Matchers'
      mute_time_intervals:
        items:
          type: string
        type: array
        x-go-name: MuteTimeIntervals
      object_matchers:
        $ref: '#/definitions/ObjectMatchers'
      provenance:
        $ref: '#/definitions/Provenance'
      receiver:
        type: string
        x-go-name: Receiver
      repeat_interval:
        $ref: '#/definitions/Duration'
      routes:
        items:
          $ref: '#/definitions/Route'
        type: array
        x-go-name: Routes
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Rule:
    description: adapted from cortex
    properties:
      evaluationTime:
        format: double
        type: number
        x-go-name: EvaluationTime
      health:
        type: string
        x-go-name: Health
      labels:
        $ref: '#/definitions/overrideLabels'
      lastError:
        type: string
        x-go-name: LastError
      lastEvaluation:
        format: date-time
        type: string
        x-go-name: LastEvaluation
      name:
        type: string
        x-go-name: Name
      query:
        type: string
        x-go-name: Query
      type:
        $ref: '#/definitions/RuleType'
    required:
      - name
      - query
      - health
      - type
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  RuleDiscovery:
    properties:
      groups:
        items:
          $ref: '#/definitions/RuleGroup'
        type: array
        x-go-name: RuleGroups
    required:
      - groups
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  RuleGroup:
    properties:
      evaluationTime:
        format: double
        type: number
        x-go-name: EvaluationTime
      file:
        type: string
        x-go-name: File
      interval:
        format: double
        type: number
        x-go-name: Interval
      lastEvaluation:
        format: date-time
        type: string
        x-go-name: LastEvaluation
      name:
        type: string
        x-go-name: Name
      rules:
        description: >-
          In order to preserve rule ordering, while exposing type (alerting or
          recording)

          specific properties, both alerting and recording rules are exposed in
          the

          same array.
        items:
          $ref: '#/definitions/AlertingRule'
        type: array
        x-go-name: Rules
    required:
      - name
      - file
      - rules
      - interval
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  RuleGroupConfigResponse:
    properties:
      interval:
        $ref: '#/definitions/Duration'
      name:
        type: string
        x-go-name: Name
      rules:
        items:
          $ref: '#/definitions/GettableExtendedRuleNode'
        type: array
        x-go-name: Rules
      source_tenants:
        items:
          type: string
        type: array
        x-go-name: SourceTenants
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  RuleResponse:
    properties:
      data:
        $ref: '#/definitions/RuleDiscovery'
      error:
        type: string
        x-go-name: Error
      errorType:
        $ref: '#/definitions/ErrorType'
      status:
        type: string
        x-go-name: Status
    required:
      - status
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  RuleType:
    title: RuleType models the type of a rule.
    type: string
    x-go-package: github.com/prometheus/client_golang/api/prometheus/v1
  SNSConfig:
    properties:
      api_url:
        type: string
        x-go-name: APIUrl
      attributes:
        additionalProperties:
          type: string
        type: object
        x-go-name: Attributes
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      message:
        type: string
        x-go-name: Message
      phone_number:
        type: string
        x-go-name: PhoneNumber
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      sigv4:
        $ref: '#/definitions/SigV4Config'
      subject:
        type: string
        x-go-name: Subject
      target_arn:
        type: string
        x-go-name: TargetARN
      topic_arn:
        type: string
        x-go-name: TopicARN
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  Sample:
    properties:
      Metric:
        $ref: '#/definitions/Labels'
      T:
        format: int64
        type: integer
      V:
        format: double
        type: number
    title: Sample is a single sample belonging to a metric.
    type: object
    x-go-package: github.com/prometheus/prometheus/promql
  Secret:
    title: Secret special type for storing secrets.
    type: string
    x-go-package: github.com/prometheus/common/config
  SecretURL:
    $ref: '#/definitions/URL'
    title: SecretURL is a URL that must not be revealed on marshaling.
  SigV4Config:
    description: |-
      SigV4Config is the configuration for signing remote write requests with
      AWS's SigV4 verification process. Empty values will be retrieved using the
      AWS default credentials chain.
    properties:
      AccessKey:
        type: string
      Profile:
        type: string
      Region:
        type: string
      RoleARN:
        type: string
      SecretKey:
        $ref: '#/definitions/Secret'
    type: object
    x-go-package: github.com/prometheus/common/sigv4
  SlackAction:
    description: >-
      See https://api.slack.com/docs/message-attachments#action_fields and
      https://api.slack.com/docs/message-buttons

      for more information.
    properties:
      confirm:
        $ref: '#/definitions/SlackConfirmationField'
      name:
        type: string
        x-go-name: Name
      style:
        type: string
        x-go-name: Style
      text:
        type: string
        x-go-name: Text
      type:
        type: string
        x-go-name: Type
      url:
        type: string
        x-go-name: URL
      value:
        type: string
        x-go-name: Value
    title: >-
      SlackAction configures a single Slack action that is sent with each
      notification.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  SlackConfig:
    properties:
      actions:
        items:
          $ref: '#/definitions/SlackAction'
        type: array
        x-go-name: Actions
      api_url:
        $ref: '#/definitions/SecretURL'
      api_url_file:
        type: string
        x-go-name: APIURLFile
      callback_id:
        type: string
        x-go-name: CallbackID
      channel:
        description: 'Slack channel override, (like #other-channel or @username).'
        type: string
        x-go-name: Channel
      color:
        type: string
        x-go-name: Color
      fallback:
        type: string
        x-go-name: Fallback
      fields:
        items:
          $ref: '#/definitions/SlackField'
        type: array
        x-go-name: Fields
      footer:
        type: string
        x-go-name: Footer
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      icon_emoji:
        type: string
        x-go-name: IconEmoji
      icon_url:
        type: string
        x-go-name: IconURL
      image_url:
        type: string
        x-go-name: ImageURL
      link_names:
        type: boolean
        x-go-name: LinkNames
      mrkdwn_in:
        items:
          type: string
        type: array
        x-go-name: MrkdwnIn
      pretext:
        type: string
        x-go-name: Pretext
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      short_fields:
        type: boolean
        x-go-name: ShortFields
      text:
        type: string
        x-go-name: Text
      thumb_url:
        type: string
        x-go-name: ThumbURL
      title:
        type: string
        x-go-name: Title
      title_link:
        type: string
        x-go-name: TitleLink
      username:
        type: string
        x-go-name: Username
    title: SlackConfig configures notifications via Slack.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  SlackConfirmationField:
    description: >-
      SlackConfirmationField protect users from destructive actions or
      particularly distinguished decisions

      by asking them to confirm their button click one more time.

      See
      https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields
      for more information.
    properties:
      dismiss_text:
        type: string
        x-go-name: DismissText
      ok_text:
        type: string
        x-go-name: OkText
      text:
        type: string
        x-go-name: Text
      title:
        type: string
        x-go-name: Title
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  SlackField:
    description: >-
      Each field must contain a title, value, and optionally, a boolean value to
      indicate if the field

      is short enough to be displayed next to other fields designated as short.

      See https://api.slack.com/docs/message-attachments#fields for more
      information.
    properties:
      short:
        type: boolean
        x-go-name: Short
      title:
        type: string
        x-go-name: Title
      value:
        type: string
        x-go-name: Value
    title: >-
      SlackField configures a single Slack field that is sent with each
      notification.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  SmtpNotEnabled:
    $ref: '#/definitions/ResponseDetails'
  Success:
    $ref: '#/definitions/ResponseDetails'
  TLSConfig:
    properties:
      ca_file:
        description: The CA cert to use for the targets.
        type: string
        x-go-name: CAFile
      cert_file:
        description: The client cert file for the targets.
        type: string
        x-go-name: CertFile
      insecure_skip_verify:
        description: Disable target certificate validation.
        type: boolean
        x-go-name: InsecureSkipVerify
      key_file:
        description: The client key file for the targets.
        type: string
        x-go-name: KeyFile
      server_name:
        description: Used to verify the hostname for the targets.
        type: string
        x-go-name: ServerName
    title: TLSConfig configures the options for TLS connections.
    type: object
    x-go-package: github.com/prometheus/common/config
  TestReceiverConfigResult:
    properties:
      error:
        type: string
        x-go-name: Error
      name:
        type: string
        x-go-name: Name
      status:
        type: string
        x-go-name: Status
      uid:
        type: string
        x-go-name: UID
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TestReceiverResult:
    properties:
      grafana_managed_receiver_configs:
        items:
          $ref: '#/definitions/TestReceiverConfigResult'
        type: array
        x-go-name: Configs
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TestReceiversConfigAlertParams:
    properties:
      annotations:
        $ref: '#/definitions/LabelSet'
      labels:
        $ref: '#/definitions/LabelSet'
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TestReceiversConfigBodyParams:
    properties:
      alert:
        $ref: '#/definitions/TestReceiversConfigAlertParams'
      receivers:
        items:
          $ref: '#/definitions/PostableApiReceiver'
        type: array
        x-go-name: Receivers
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TestReceiversResult:
    properties:
      alert:
        $ref: '#/definitions/TestReceiversConfigAlertParams'
      notified_at:
        format: date-time
        type: string
        x-go-name: NotifiedAt
      receivers:
        items:
          $ref: '#/definitions/TestReceiverResult'
        type: array
        x-go-name: Receivers
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TestRulePayload:
    properties:
      expr:
        example: >-
          (node_filesystem_avail_bytes{fstype!="",job="integrations/node_exporter"}
          node_filesystem_size_bytes{fstype!="",job="integrations/node_exporter"}
          * 100 < 5 and
          node_filesystem_readonly{fstype!="",job="integrations/node_exporter"}
          == 0)
        type: string
        x-go-name: Expr
      grafana_condition:
        $ref: '#/definitions/EvalAlertConditionCommand'
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TestRuleResponse:
    properties:
      alerts:
        $ref: '#/definitions/Vector'
      grafana_alert_instances:
        $ref: '#/definitions/AlertInstancesResponse'
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  TimeInterval:
    description: >-
      TimeInterval describes intervals of time. ContainsTime will tell you if a
      golang time is contained

      within the interval.
    properties:
      days_of_month:
        items:
          $ref: '#/definitions/DayOfMonthRange'
        type: array
        x-go-name: DaysOfMonth
      months:
        items:
          $ref: '#/definitions/MonthRange'
        type: array
        x-go-name: Months
      times:
        items:
          $ref: '#/definitions/TimeRange'
        type: array
        x-go-name: Times
      weekdays:
        items:
          $ref: '#/definitions/WeekdayRange'
        type: array
        x-go-name: Weekdays
      years:
        items:
          $ref: '#/definitions/YearRange'
        type: array
        x-go-name: Years
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  TimeRange:
    description: For example, 4:00PM to End of the day would Begin at 1020 and End at 1440.
    properties:
      EndMinute:
        format: int64
        type: integer
      StartMinute:
        format: int64
        type: integer
    title: >-
      TimeRange represents a range of minutes within a 1440 minute day,
      exclusive of the End minute. A day consists of 1440 minutes.
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  URL:
    properties:
      ForceQuery:
        type: boolean
      Fragment:
        type: string
      Host:
        type: string
      Opaque:
        type: string
      Path:
        type: string
      RawFragment:
        type: string
      RawPath:
        type: string
      RawQuery:
        type: string
      Scheme:
        type: string
      User:
        $ref: '#/definitions/Userinfo'
    title: >-
      URL is a custom URL type that allows validation at configuration load
      time.
    type: object
    x-go-package: github.com/prometheus/common/config
  Userinfo:
    description: |-
      The Userinfo type is an immutable encapsulation of username and
      password details for a URL. An existing Userinfo value is guaranteed
      to have a username set (potentially empty, as allowed by RFC 2396),
      and optionally a password.
    type: object
    x-go-package: net/url
  ValidationError:
    properties:
      msg:
        type: string
        x-go-name: Msg
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  Vector:
    description: |-
      Vector is basically only an alias for model.Samples, but the
      contract is that in a Vector, all Samples have the same timestamp.
    items:
      $ref: '#/definitions/Sample'
    type: array
    x-go-package: github.com/prometheus/prometheus/promql
  VictorOpsConfig:
    properties:
      api_key:
        $ref: '#/definitions/Secret'
      api_key_file:
        $ref: '#/definitions/Secret'
      api_url:
        $ref: '#/definitions/URL'
      custom_fields:
        additionalProperties:
          type: string
        type: object
        x-go-name: CustomFields
      entity_display_name:
        type: string
        x-go-name: EntityDisplayName
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      message_type:
        type: string
        x-go-name: MessageType
      monitoring_tool:
        type: string
        x-go-name: MonitoringTool
      routing_key:
        type: string
        x-go-name: RoutingKey
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      state_message:
        type: string
        x-go-name: StateMessage
    title: VictorOpsConfig configures notifications via VictorOps.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  WebhookConfig:
    properties:
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      max_alerts:
        description: >-
          MaxAlerts is the maximum number of alerts to be sent per webhook
          message.

          Alerts exceeding this threshold will be truncated. Setting this to 0

          allows an unlimited number of alerts.
        format: uint64
        type: integer
        x-go-name: MaxAlerts
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      url:
        $ref: '#/definitions/URL'
    title: WebhookConfig configures notifications via a generic webhook.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  WechatConfig:
    properties:
      agent_id:
        type: string
        x-go-name: AgentID
      api_secret:
        $ref: '#/definitions/Secret'
      api_url:
        $ref: '#/definitions/URL'
      corp_id:
        type: string
        x-go-name: CorpID
      http_config:
        $ref: '#/definitions/HTTPClientConfig'
      message:
        type: string
        x-go-name: Message
      message_type:
        type: string
        x-go-name: MessageType
      send_resolved:
        type: boolean
        x-go-name: VSendResolved
      to_party:
        type: string
        x-go-name: ToParty
      to_tag:
        type: string
        x-go-name: ToTag
      to_user:
        type: string
        x-go-name: ToUser
    title: WechatConfig configures notifications via Wechat.
    type: object
    x-go-package: github.com/prometheus/alertmanager/config
  WeekdayRange:
    properties:
      Begin:
        format: int64
        type: integer
      End:
        format: int64
        type: integer
    title: A WeekdayRange is an inclusive range between [0, 6] where 0 = Sunday.
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  YearRange:
    properties:
      Begin:
        format: int64
        type: integer
      End:
        format: int64
        type: integer
    title: A YearRange is a positive inclusive range.
    type: object
    x-go-package: github.com/prometheus/alertmanager/timeinterval
  alert:
    description: Alert alert
    properties:
      generatorURL:
        description: |-
          generator URL
          Format: uri
        format: uri
        type: string
        x-go-name: GeneratorURL
      labels:
        $ref: '#/definitions/labelSet'
    required:
      - labels
    type: object
    x-go-name: Alert
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  alertGroup:
    properties:
      alerts:
        description: alerts
        items:
          $ref: '#/definitions/gettableAlert'
        type: array
        x-go-name: Alerts
      labels:
        $ref: '#/definitions/labelSet'
      receiver:
        $ref: '#/definitions/receiver'
    required:
      - alerts
      - labels
      - receiver
    type: object
    x-go-name: AlertGroup
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  alertGroups:
    items:
      $ref: '#/definitions/alertGroup'
    type: array
    x-go-name: AlertGroups
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  alertStatus:
    description: AlertStatus alert status
    properties:
      inhibitedBy:
        description: inhibited by
        items:
          type: string
        type: array
        x-go-name: InhibitedBy
      silencedBy:
        description: silenced by
        items:
          type: string
        type: array
        x-go-name: SilencedBy
      state:
        description: state
        enum:
          - '[unprocessed active suppressed]'
        type: string
        x-go-name: State
    required:
      - inhibitedBy
      - silencedBy
      - state
    type: object
    x-go-name: AlertStatus
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  alertmanagerConfig:
    description: AlertmanagerConfig alertmanager config
    properties:
      original:
        description: original
        type: string
        x-go-name: Original
    required:
      - original
    type: object
    x-go-name: AlertmanagerConfig
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  alertmanagerStatus:
    description: AlertmanagerStatus alertmanager status
    properties:
      cluster:
        $ref: '#/definitions/clusterStatus'
      config:
        $ref: '#/definitions/alertmanagerConfig'
      uptime:
        description: uptime
        format: date-time
        type: string
        x-go-name: Uptime
      versionInfo:
        $ref: '#/definitions/versionInfo'
    required:
      - cluster
      - config
      - uptime
      - versionInfo
    type: object
    x-go-name: AlertmanagerStatus
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  clusterStatus:
    description: ClusterStatus cluster status
    properties:
      name:
        description: name
        type: string
        x-go-name: Name
      peers:
        description: peers
        items:
          $ref: '#/definitions/peerStatus'
        type: array
        x-go-name: Peers
      status:
        description: status
        enum:
          - '[ready settling disabled]'
        type: string
        x-go-name: Status
    required:
      - status
    type: object
    x-go-name: ClusterStatus
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
#  duration:
#    $ref: '#/definitions/Duration'
  gettableAlert:
    properties:
      annotations:
        $ref: '#/definitions/labelSet'
      endsAt:
        description: ends at
        format: date-time
        type: string
        x-go-name: EndsAt
      fingerprint:
        description: fingerprint
        type: string
        x-go-name: Fingerprint
      generatorURL:
        description: |-
          generator URL
          Format: uri
        format: uri
        type: string
        x-go-name: GeneratorURL
      labels:
        $ref: '#/definitions/labelSet'
      receivers:
        description: receivers
        items:
          $ref: '#/definitions/receiver'
        type: array
        x-go-name: Receivers
      startsAt:
        description: starts at
        format: date-time
        type: string
        x-go-name: StartsAt
      status:
        $ref: '#/definitions/alertStatus'
      updatedAt:
        description: updated at
        format: date-time
        type: string
        x-go-name: UpdatedAt
    required:
      - labels
      - annotations
      - endsAt
      - fingerprint
      - receivers
      - startsAt
      - status
      - updatedAt
    type: object
    x-go-name: GettableAlert
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  gettableAlerts:
    items:
      $ref: '#/definitions/gettableAlert'
    type: array
    x-go-name: GettableAlerts
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  gettableSilence:
    description: GettableSilence gettable silence
    properties:
      comment:
        description: comment
        type: string
        x-go-name: Comment
      createdBy:
        description: created by
        type: string
        x-go-name: CreatedBy
      endsAt:
        description: ends at
        format: date-time
        type: string
        x-go-name: EndsAt
      id:
        description: id
        type: string
        x-go-name: ID
      matchers:
        $ref: '#/definitions/matchers'
      startsAt:
        description: starts at
        format: date-time
        type: string
        x-go-name: StartsAt
      status:
        $ref: '#/definitions/silenceStatus'
      updatedAt:
        description: updated at
        format: date-time
        type: string
        x-go-name: UpdatedAt
    required:
      - comment
      - createdBy
      - endsAt
      - matchers
      - startsAt
      - id
      - status
      - updatedAt
    type: object
  gettableSilences:
    description: GettableSilences gettable silences
    items:
      $ref: '#/definitions/gettableSilence'
    type: array
  labelSet:
    additionalProperties:
      type: string
    description: LabelSet label set
    type: object
    x-go-name: LabelSet
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  matcher:
    description: Matcher matcher
    properties:
      isEqual:
        description: is equal
        type: boolean
        x-go-name: IsEqual
      isRegex:
        description: is regex
        type: boolean
        x-go-name: IsRegex
      name:
        description: name
        type: string
        x-go-name: Name
      value:
        description: value
        type: string
        x-go-name: Value
    required:
      - isRegex
      - name
      - value
    type: object
    x-go-name: Matcher
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  matchers:
    description: Matchers matchers
    items:
      $ref: '#/definitions/matcher'
    type: array
    x-go-name: Matchers
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  overrideLabels:
    additionalProperties:
      type: string
    description: The custom marshaling for labels.Labels ends up doing this anyways.
    title: override the labels type with a map for generation.
    type: object
    x-go-package: github.com/grafana/grafana/pkg/services/ngalert/api/tooling/definitions
  peerStatus:
    description: PeerStatus peer status
    properties:
      address:
        description: address
        type: string
        x-go-name: Address
      name:
        description: name
        type: string
        x-go-name: Name
    required:
      - address
      - name
    type: object
    x-go-name: PeerStatus
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  postableAlert:
    description: PostableAlert postable alert
    properties:
      annotations:
        $ref: '#/definitions/labelSet'
      endsAt:
        description: |-
          ends at
          Format: date-time
        format: date-time
        type: string
        x-go-name: EndsAt
      generatorURL:
        description: |-
          generator URL
          Format: uri
        format: uri
        type: string
        x-go-name: GeneratorURL
      labels:
        $ref: '#/definitions/labelSet'
      startsAt:
        description: |-
          starts at
          Format: date-time
        format: date-time
        type: string
        x-go-name: StartsAt
    required:
      - labels
    type: object
    x-go-name: PostableAlert
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  postableAlerts:
    description: PostableAlerts postable alerts
    items:
      $ref: '#/definitions/postableAlert'
    type: array
    x-go-name: PostableAlerts
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  postableSilence:
    properties:
      comment:
        description: comment
        type: string
        x-go-name: Comment
      createdBy:
        description: created by
        type: string
        x-go-name: CreatedBy
      endsAt:
        description: ends at
        format: date-time
        type: string
        x-go-name: EndsAt
      id:
        description: id
        type: string
        x-go-name: ID
      matchers:
        $ref: '#/definitions/matchers'
      startsAt:
        description: starts at
        format: date-time
        type: string
        x-go-name: StartsAt
    required:
      - comment
      - createdBy
      - endsAt
      - matchers
      - startsAt
    type: object
    x-go-name: PostableSilence
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  receiver:
    properties:
      name:
        description: name
        type: string
        x-go-name: Name
    required:
      - name
    type: object
    x-go-name: Receiver
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  silence:
    description: Silence silence
    properties:
      comment:
        description: comment
        type: string
        x-go-name: Comment
      createdBy:
        description: created by
        type: string
        x-go-name: CreatedBy
      endsAt:
        description: ends at
        format: date-time
        type: string
        x-go-name: EndsAt
      matchers:
        $ref: '#/definitions/matchers'
      startsAt:
        description: starts at
        format: date-time
        type: string
        x-go-name: StartsAt
    required:
      - comment
      - createdBy
      - endsAt
      - matchers
      - startsAt
    type: object
    x-go-name: Silence
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  silenceStatus:
    description: SilenceStatus silence status
    properties:
      state:
        description: state
        enum:
          - '[expired active pending]'
        type: string
        x-go-name: State
    required:
      - state
    type: object
    x-go-name: SilenceStatus
    x-go-package: github.com/prometheus/alertmanager/api/v2/models
  versionInfo:
    description: VersionInfo version info
    properties:
      branch:
        description: branch
        type: string
        x-go-name: Branch
      buildDate:
        description: build date
        type: string
        x-go-name: BuildDate
      buildUser:
        description: build user
        type: string
        x-go-name: BuildUser
      goVersion:
        description: go version
        type: string
        x-go-name: GoVersion
      revision:
        description: revision
        type: string
        x-go-name: Revision
      version:
        description: version
        type: string
        x-go-name: Version
    required:
      - branch
      - buildDate
      - buildUser
      - goVersion
      - revision
      - version
    type: object
    x-go-name: VersionInfo
    x-go-package: github.com/prometheus/alertmanager/api/v2/models



















responses:
  SMTPNotEnabledError:
    description: ''
  acceptedResponse:
    description: AcceptedResponse
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  addOrgUser:
    description: ''
    schema:
      type: object
      required:
        - id
        - message
      properties:
        id:
          description: ID Identifier of the added user.
          type: integer
          format: int64
          x-go-name: UsedID
          example: 65
        message:
          description: Message Message of the added user.
          type: string
          x-go-name: Message
          example: Data source added
  badRequestError:
    description: BadRequestError is returned when the request is invalid and it cannot be processed.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  conflictError:
    description: ConflictError
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  contentResponse:
    description: ''
    schema:
      type: array
      items:
        type: integer
        format: uint8
  createAnnotationResponse:
    description: ''
    schema:
      type: object
      required:
        - id
        - message
      properties:
        id:
          description: ID Identifier of the created annotation.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
        message:
          description: Message Message of the created annotation.
          type: string
          x-go-name: Message
  createOrUpdateDatasourceResponse:
    description: ''
    schema:
      type: object
      required:
        - id
        - name
        - message
        - datasource
      properties:
        datasource:
          $ref: '#/definitions/DataSource'
        id:
          description: ID Identifier of the new data source.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
        message:
          description: Message Message of the deleted dashboard.
          type: string
          x-go-name: Message
          example: Data source added
        name:
          description: Name of the new data source.
          type: string
          x-go-name: Name
          example: My Data source
  createOrgResponse:
    description: ''
    schema:
      type: object
      required:
        - orgId
        - message
      properties:
        message:
          description: Message Message of the created org.
          type: string
          x-go-name: Message
          example: Data source added
        orgId:
          description: ID Identifier of the created org.
          type: integer
          format: int64
          x-go-name: OrgID
          example: 65
  createReportResponse:
    description: ''
    schema:
      type: object
  createSnapshotResponse:
    description: ''
    schema:
      type: object
      properties:
        deleteKey:
          description: Unique key used to delete the snapshot. It is different from the key so that only the creator can delete the snapshot.
          type: string
          x-go-name: DeleteKey
        deleteUrl:
          type: string
          x-go-name: DeleteUrl
        id:
          description: Snapshot id
          type: integer
          format: int64
          x-go-name: ID
        key:
          description: Unique key
          type: string
          x-go-name: Key
        url:
          type: string
          x-go-name: URL
  createTeamResponse:
    description: ''
    schema:
      type: object
      properties:
        message:
          type: string
          x-go-name: Message
        teamId:
          type: integer
          format: int64
          x-go-name: TeamId
  createUserResponse:
    description: ''
    schema:
      $ref: '#/definitions/UserIdDTO'
  dashboardDiffResponse:
    description: Calculate dashboard diff response.
    schema:
      type: array
      items:
        type: integer
        format: uint8
  dashboardResponse:
    description: ''
    schema:
      $ref: '#/definitions/DashboardFullWithMeta'
  dashboardVersionResponse:
    description: ''
    schema:
      $ref: '#/definitions/DashboardVersionMeta'
  dashboardVersionsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/DashboardVersionDTO'
  dashboardsTagsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/DashboardTagCloudItem'
  deleteAlertNotificationChannelResponse:
    description: ''
    schema:
      type: object
      required:
        - id
        - message
      properties:
        id:
          description: ID Identifier of the deleted notification channel.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
        message:
          description: Message Message of the deleted notificatiton channel.
          type: string
          x-go-name: Message
  deleteDashboardResponse:
    description: ''
    schema:
      type: object
      required:
        - id
        - title
        - message
      properties:
        id:
          description: ID Identifier of the deleted dashboard.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
        message:
          description: Message Message of the deleted dashboard.
          type: string
          x-go-name: Message
          example: Dashboard My Dashboard deleted
        title:
          description: Title Title of the deleted dashboard.
          type: string
          x-go-name: Title
          example: My Dashboard
  deleteDatasourceByNameResponse:
    description: ''
    schema:
      type: object
      required:
        - id
        - message
      properties:
        id:
          description: ID Identifier of the deleted data source.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
        message:
          description: Message Message of the deleted dashboard.
          type: string
          x-go-name: Message
          example: Dashboard My Dashboard deleted
  deleteFolderResponse:
    description: ''
    schema:
      type: object
      required:
        - id
        - title
        - message
      properties:
        id:
          description: ID Identifier of the deleted folder.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
        message:
          description: Message Message of the deleted folder.
          type: string
          x-go-name: Message
          example: Folder My Folder deleted
        title:
          description: Title of the deleted folder.
          type: string
          x-go-name: Title
          example: My Folder
  folderResponse:
    description: ''
    schema:
      $ref: '#/definitions/Folder'
  forbiddenError:
    description: ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  getAPIkeyResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/ApiKeyDTO'
  getAccessControlStatusResponse:
    description: ''
    schema:
      $ref: '#/definitions/Status'
  getAlertNotificationChannelResponse:
    description: ''
    schema:
      $ref: '#/definitions/AlertNotification'
  getAlertNotificationChannelsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/AlertNotification'
  getAlertResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/Alert'
  getAlertsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/AlertListItemDTO'
  getAllRolesResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/RoleDTO'
  getAnnotationTagsResponse:
    description: ''
    schema:
      $ref: '#/definitions/GetAnnotationTagsResponse'
  getAnnotationsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/ItemDTO'
  getAuthTokensResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/UserToken'
  getCustomPermissionsReportResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/CustomPermissionsRecordDTO'
  getDashboardPermissionsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/DashboardAclInfoDTO'
  getDashboardStatesResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/AlertStateInfoDTO'
  getDatasourceIDresponse:
    description: ''
    schema:
      type: object
      required:
        - id
      properties:
        id:
          description: ID Identifier of the data source.
          type: integer
          format: int64
          x-go-name: ID
          example: 65
  getDatasourceResponse:
    description: ''
    schema:
      $ref: '#/definitions/DataSource'
  getDatasourcesResponse:
    description: ''
    schema:
      $ref: '#/definitions/DataSourceList'
  getFoldersResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/FolderSearchHit'
  getHomeDashboardResponse:
    description: Home dashboard response.
    schema:
      $ref: '#/definitions/GetHomeDashboardResponse'
  getInvitesResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/TempUserDTO'
  getLDAPSyncStatusResponse:
    description: ''
    schema:
      $ref: '#/definitions/ActiveSyncStatusDTO'
  getLibraryElementConnectionsResponse:
    description: ''
    schema:
      $ref: '#/definitions/LibraryElementConnectionsResponse'
  getLibraryElementResponse:
    description: ''
    schema:
      $ref: '#/definitions/LibraryElementResponse'
  getLibraryElementsResponse:
    description: ''
    schema:
      $ref: '#/definitions/LibraryElementSearchResponse'
  getLicenseStatusResponse:
    description: ''
  getLicenseTokenResponse:
    description: ''
    schema:
      $ref: '#/definitions/Token'
  getOrgResponse:
    description: ''
    schema:
      $ref: '#/definitions/OrgDetailsDTO'
  getOrgUsersResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/OrgUserDTO'
  getPermissionseResponse:
    description: ''
    schema:
      $ref: '#/definitions/AddPermissionDTO'
  getPreferencesResponse:
    description: ''
    schema:
      $ref: '#/definitions/Prefs'
  getQuotaResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/UserQuotaDTO'
  getReportResponse:
    description: ''
    schema:
      $ref: '#/definitions/ConfigDTO'
  getReportSettingsResponse:
    description: ''
    schema:
      $ref: '#/definitions/SettingsDTO'
  getReportsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/ConfigDTO'
  getRoleResponse:
    description: ''
    schema:
      $ref: '#/definitions/RoleDTO'
  getSettingsResponse:
    description: ''
    schema:
      $ref: '#/definitions/SettingsBag'
  getSnapshotSharingOptionsResponse:
    description: ''
    schema:
      type: object
      properties:
        externalEnabled:
          type: boolean
          x-go-name: ExternalEnabled
        externalSnapshotName:
          type: string
          x-go-name: ExternalSnapshotName
        externalSnapshotURL:
          type: string
          x-go-name: ExternalSnapshotURL
  getSnapshotsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/DashboardSnapshotDTO'
  getStatsResponse:
    description: ''
    schema:
      $ref: '#/definitions/AdminStats'
  getTeamGroupsApiResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/TeamGroupDTO'
  getTeamMembersResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/TeamMemberDTO'
  getTeamResponse:
    description: ''
    schema:
      $ref: '#/definitions/TeamDTO'
  getUserOrgListResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/UserOrgDTO'
  getUserTeamsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/TeamDTO'
  helpFlagResponse:
    description: ''
    schema:
      type: object
      properties:
        helpFlags1:
          type: integer
          format: int64
          x-go-name: HelpFlags1
        message:
          type: string
          x-go-name: Message
  importDashboardResponse:
    description: ''
    schema:
      $ref: '#/definitions/ImportDashboardResponse'
  internalServerError:
    description: InternalServerError is a general error indicating something went wrong internally.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  listBuiltinRolesResponse:
    description: ''
    schema:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/definitions/RoleDTO'
  listRecordingRulesResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/RecordingRuleJSON'
  lookupAlertNotificationChannelsResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/AlertNotificationLookup'
  lookupOrgUsersResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/UserLookupDTO'
  notFoundError:
    description: NotFoundError is returned when the requested resource was not found.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  okResponse:
    description: An OKResponse is returned if the request was successful.
    schema:
      $ref: '#/definitions/SuccessResponseBody'
  pauseAlertResponse:
    description: ''
    schema:
      type: object
      required:
        - alertId
        - message
      properties:
        alertId:
          type: integer
          format: int64
          x-go-name: AlertID
        message:
          type: string
          x-go-name: Message
        state:
          description: |-
            Alert result state
            required true
          type: string
          x-go-name: State
  pauseAlertsResponse:
    description: ''
    schema:
      type: object
      required:
        - alertsAffected
        - message
      properties:
        alertsAffected:
          description: AlertsAffected is the number of the affected alerts.
          type: integer
          format: int64
          x-go-name: AlertsAffected
        message:
          type: string
          x-go-name: Message
        state:
          description: |-
            Alert result state
            required true
          type: string
          x-go-name: State
  postAPIkeyResponse:
    description: ''
    schema:
      $ref: '#/definitions/NewApiKeyResult'
  postDashboardResponse:
    description: Create/update dashboard response.
    schema:
      type: object
      required:
        - status
        - title
        - version
        - id
        - uid
        - url
      properties:
        id:
          description: ID The unique identifier (id) of the created/updated dashboard.
          type: string
          x-go-name: ID
          example: '1'
        status:
          description: Status status of the response.
          type: string
          x-go-name: Status
          example: success
        title:
          description: Slug The slug of the dashboard.
          type: string
          x-go-name: Slug
          example: my-dashboard
        uid:
          description: UID The unique identifier (uid) of the created/updated dashboard.
          type: string
          x-go-name: UID
          example: nHz3SXiiz
        url:
          description: URL The relative URL for accessing the created/updated dashboard.
          type: string
          x-go-name: URL
          example: /d/nHz3SXiiz/my-dashboard
        version:
          description: Version The version of the dashboard.
          type: integer
          format: int64
          x-go-name: Verion
          example: 2
  postRenewLicenseTokenResponse:
    description: ''
  preconditionFailedError:
    description: PreconditionFailedError
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  queryDataResponse:
    description: ''
    schema:
      $ref: '#/definitions/QueryDataResponse'
  queryDatasourceResponse:
    description: ''
    schema:
      $ref: '#/definitions/DataResponse'
  recordingRuleResponse:
    description: ''
    schema:
      $ref: '#/definitions/RecordingRuleJSON'
  recordingRuleWriteTargetResponse:
    description: ''
    schema:
      $ref: '#/definitions/PrometheusRemoteWriteTargetJSON'
  refreshLicenseStatsResponse:
    description: ''
    schema:
      $ref: '#/definitions/ActiveUserStats'
  searchOrgResponse:
    description: ''
    schema:
      type: array
      items:
        $ref: '#/definitions/OrgDTO'
  searchResponse:
    description: ''
    schema:
      $ref: '#/definitions/HitList'
  searchSortingResponse:
    description: ''
    schema:
      type: object
      properties:
        description:
          type: string
          x-go-name: Description
        displayName:
          type: string
          x-go-name: DisplayName
        meta:
          type: string
          x-go-name: Meta
        name:
          type: string
          x-go-name: Name
  searchTeamsResponse:
    description: ''
    schema:
      $ref: '#/definitions/SearchTeamQueryResult'
  searchUsersResponse:
    description: ''
    schema:
      $ref: '#/definitions/SearchUserQueryResult'
  snapshotResponse:
    description: ''
  testAlertResponse:
    description: ''
    schema:
      $ref: '#/definitions/AlertTestResult'
  trimDashboardResponse:
    description: Trimmed dashboard response.
    schema:
      $ref: '#/definitions/TrimDashboardFullWithMeta'
  unauthorisedError:
    description: UnauthorizedError is returned when the request is not authenticated.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  unprocessableEntityError:
    description: UnprocessableEntityError
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  userResponse:
    description: ''
    schema:
      $ref: '#/definitions/UserProfileDTO'

securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
  basic:
    type: basic
security:
  - basic: []
  - api_key: []
tags:
  - description: If you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.
    name: datasources
  - description: |-
      Folders are identified by the identifier (id) and the unique identifier (uid).
      The identifier (id) of a folder is an auto-incrementing numeric value and is only unique per Grafana install.
      The unique identifier (uid) of a folder can be used for uniquely identify folders between multiple Grafana installs. It’s automatically generated if not provided when creating a folder. The uid allows having consistent URLs for accessing folders and when syncing folders between multiple Grafana installs. This means that changing the title of a folder will not break any bookmarked links to that folder.
      The uid can have a maximum length of 40 characters.

      The General folder (id=0) is special and is not part of the Folder API which means that you cannot use this API for retrieving information about the General folder.
    name: folders
  - description: Permissions with `folderId=-1` are the default permissions for users with the Viewer and Editor roles. Permissions can be set for a user, a team or a role (Viewer or Editor). Permissions cannot be set for Admins - they always have access to everything.
    name: folder_permissions
  - description: The Admin HTTP API does not currently work with an API Token. API Tokens are currently only linked to an organization and an organization role. They cannot be given the permission of server admin, only users can be given that permission. So in order to use these API calls you will have to use Basic Auth and the Grafana user must have the Grafana Admin permission. (The default admin user is called admin and has permission to use this API.)
    name: admin
  - description: |-
      You can use the Alerting API to get information about legacy dashboard alerts and their states but this API cannot be used to modify the alert. To create new alerts or modify them you need to update the dashboard JSON that contains the alerts.
      This topic is relevant for the legacy dashboard alerts only.
      You can find Grafana 8 alerts API specification details [here](https://editor.swagger.io/?url=https://raw.githubusercontent.com/grafana/grafana/main/pkg/services/ngalert/api/tooling/post.json).
    name: legacy_alerts
  - description: |-
      The identifier (id) of a notification channel is an auto-incrementing numeric value and is only unique per Grafana install.
      The unique identifier (uid) of a notification channel can be used for uniquely identify a notification channel between multiple Grafana installs. It’s automatically generated if not provided when creating a notification channel. The uid allows having consistent URLs for accessing notification channels and when syncing notification channels between multiple Grafana installations, refer to alert notification channel provisioning.
      The uid can have a maximum length of 40 characters.
    name: legacy_alerts_notification_channels
  - description: Grafana Annotations feature released in Grafana 4.6. Annotations are saved in the Grafana database (sqlite, mysql or postgres). Annotations can be organization annotations that can be shown on any dashboard by configuring an annotation data source - they are filtered by tags. Or they can be tied to a panel on a dashboard and are then only shown on that panel.
    name: annotations
  - description: |-
      The identifier (ID) of a library element is an auto-incrementing numeric value that is unique per Grafana install.
      The unique identifier (UID) of a library element uniquely identifies library elements between multiple Grafana installs. It’s automatically generated unless you specify it during library element creation. The UID provides consistent URLs for accessing library elements and when syncing library elements between multiple Grafana installs.
      The maximum length of a UID is 40 characters.
    name: library_elements
  - description: The Admin Organizations HTTP API does not currently work with an API Token. API Tokens are currently only linked to an organization and an organization role. They cannot be given the permission of server admin, only users can be given that permission. So in order to use these API calls you will have to use Basic Auth and the Grafana user must have the Grafana Admin permission (The default admin user is called `admin` and has permission to use this API).
    name: orgs
  - description: If you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.
    name: current_org_details
  - description: This API can be used to create/update/delete Teams and to add/remove users to Teams. All actions require that the user has the Admin role for the organization.
    name: teams
  - description: |-
      This API can be used to enable, disable, list, add and remove permissions for a data source.
      Permissions can be set for a user or a team. Permissions cannot be set for Admins - they always have access to everything.
      This is only available in Grafana Enterprise
      If you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.
    name: datasource_permissions
  - description: These are only available in Grafana Enterprise
    name: enterprise
  - description: |-
      The API can be used to create, update, get and list roles, and create or remove built-in role assignments. To use the API, you would need to enable fine-grained access control.
      This only available in Grafana Enterprise.
      The API does not currently work with an API Token. So in order to use these API endpoints you will have to use Basic auth.
    name: access_control
  - description: |-
      Licensing is only available in Grafana Enterprise. Read more about Grafana Enterprise.
      If you are running Grafana Enterprise and have Fine-grained access control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.
    name: licensing
  - description: |-
      This API allows you to interact programmatically with the Reporting feature.
      Reporting is only available in Grafana Enterprise. Read more about Grafana Enterprise.
      If you have Fine-grained access Control enabled, for some endpoints you would need to have relevant permissions. Refer to specific resources to understand what permissions are required.
    name: reports
  - description: Grafana Alerting Alertmanager-compatible endpoints
    name: alertmanager
  - description: Grafana Alerting endpoints for managing rules
    name: ruler
  - description: Grafana Alerting testing endpoints
    name: testing
  - description: Grafana Alerting Prometheus-compatible endpoints
    name: prometheus
